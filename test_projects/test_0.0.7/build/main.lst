ARM GAS  /tmp/ccUAoPyn.s 			page 1


   1              		.cpu cortex-m4
   2              		.eabi_attribute 27, 1
   3              		.eabi_attribute 28, 1
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 1
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.file	"main.c"
  14              		.text
  15              	.Ltext0:
  16              		.cfi_sections	.debug_frame
  17              		.section	.text.MX_GPIO_Init,"ax",%progbits
  18              		.align	1
  19              		.arch armv7e-m
  20              		.syntax unified
  21              		.thumb
  22              		.thumb_func
  23              		.fpu fpv4-sp-d16
  25              	MX_GPIO_Init:
  26              	.LFB140:
  27              		.file 1 "Src/main.c"
   1:Src/main.c    **** /* USER CODE BEGIN Header */
   2:Src/main.c    **** /**
   3:Src/main.c    ****   ******************************************************************************
   4:Src/main.c    ****   * @file           : main.c
   5:Src/main.c    ****   * @brief          : Main program body
   6:Src/main.c    ****   ******************************************************************************
   7:Src/main.c    ****   * @attention
   8:Src/main.c    ****   *
   9:Src/main.c    ****   * <h2><center>&copy; Copyright (c) 2021 STMicroelectronics.
  10:Src/main.c    ****   * All rights reserved.</center></h2>
  11:Src/main.c    ****   *
  12:Src/main.c    ****   * This software component is licensed by ST under BSD 3-Clause license,
  13:Src/main.c    ****   * the "License"; You may not use this file except in compliance with the
  14:Src/main.c    ****   * License. You may obtain a copy of the License at:
  15:Src/main.c    ****   *                        opensource.org/licenses/BSD-3-Clause
  16:Src/main.c    ****   *
  17:Src/main.c    ****   ******************************************************************************
  18:Src/main.c    ****   */
  19:Src/main.c    **** /* USER CODE END Header */
  20:Src/main.c    **** /* Includes ------------------------------------------------------------------*/
  21:Src/main.c    **** #include "main.h"
  22:Src/main.c    **** 
  23:Src/main.c    **** /* Private includes ----------------------------------------------------------*/
  24:Src/main.c    **** /* USER CODE BEGIN Includes */
  25:Src/main.c    **** #include <stdio.h>
  26:Src/main.c    **** #include <string.h>
  27:Src/main.c    **** /* USER CODE END Includes */
  28:Src/main.c    **** 
  29:Src/main.c    **** /* Private typedef -----------------------------------------------------------*/
  30:Src/main.c    **** /* USER CODE BEGIN PTD */
  31:Src/main.c    **** 
ARM GAS  /tmp/ccUAoPyn.s 			page 2


  32:Src/main.c    **** /* USER CODE END PTD */
  33:Src/main.c    **** 
  34:Src/main.c    **** /* Private define ------------------------------------------------------------*/
  35:Src/main.c    **** /* USER CODE BEGIN PD */
  36:Src/main.c    **** /* USER CODE END PD */
  37:Src/main.c    **** 
  38:Src/main.c    **** /* Private macro -------------------------------------------------------------*/
  39:Src/main.c    **** /* USER CODE BEGIN PM */
  40:Src/main.c    **** 
  41:Src/main.c    **** /* USER CODE END PM */
  42:Src/main.c    **** 
  43:Src/main.c    **** /* Private variables ---------------------------------------------------------*/
  44:Src/main.c    **** TIM_HandleTypeDef htim1;
  45:Src/main.c    **** TIM_HandleTypeDef htim16;
  46:Src/main.c    **** 
  47:Src/main.c    **** UART_HandleTypeDef huart2;
  48:Src/main.c    **** 
  49:Src/main.c    **** /* USER CODE BEGIN PV */
  50:Src/main.c    **** volatile uint8_t status = 0; //1 wenn steigende Flanke schon da war
  51:Src/main.c    **** volatile uint16_t rise = 0;  //Compare-Wert bei steigender Flanke
  52:Src/main.c    **** volatile uint16_t fall = 0;  //Compare-Wert bei fallender Flanke
  53:Src/main.c    **** volatile uint16_t difference = 0;  //Differenz zwischen den Flanken
  54:Src/main.c    **** uint8_t buf[15];
  55:Src/main.c    **** volatile int entfernung = 0;
  56:Src/main.c    **** /* USER CODE END PV */
  57:Src/main.c    **** 
  58:Src/main.c    **** /* Private function prototypes -----------------------------------------------*/
  59:Src/main.c    **** void SystemClock_Config(void);
  60:Src/main.c    **** static void MX_GPIO_Init(void);
  61:Src/main.c    **** static void MX_TIM1_Init(void);
  62:Src/main.c    **** static void MX_USART2_UART_Init(void);
  63:Src/main.c    **** static void MX_TIM16_Init(void);
  64:Src/main.c    **** /* USER CODE BEGIN PFP */
  65:Src/main.c    **** 
  66:Src/main.c    **** /* USER CODE END PFP */
  67:Src/main.c    **** 
  68:Src/main.c    **** /* Private user code ---------------------------------------------------------*/
  69:Src/main.c    **** /* USER CODE BEGIN 0 */
  70:Src/main.c    **** 
  71:Src/main.c    **** /* USER CODE END 0 */
  72:Src/main.c    **** 
  73:Src/main.c    **** /**
  74:Src/main.c    ****   * @brief  The application entry point.
  75:Src/main.c    ****   * @retval int
  76:Src/main.c    ****   */
  77:Src/main.c    **** int main(void)
  78:Src/main.c    **** {
  79:Src/main.c    ****   /* USER CODE BEGIN 1 */
  80:Src/main.c    **** 
  81:Src/main.c    ****   /* USER CODE END 1 */
  82:Src/main.c    **** 
  83:Src/main.c    ****   /* MCU Configuration--------------------------------------------------------*/
  84:Src/main.c    **** 
  85:Src/main.c    ****   /* Reset of all peripherals, Initializes the Flash interface and the Systick. */
  86:Src/main.c    ****   HAL_Init();
  87:Src/main.c    **** 
  88:Src/main.c    ****   /* USER CODE BEGIN Init */
ARM GAS  /tmp/ccUAoPyn.s 			page 3


  89:Src/main.c    **** 
  90:Src/main.c    ****   /* USER CODE END Init */
  91:Src/main.c    **** 
  92:Src/main.c    ****   /* Configure the system clock */
  93:Src/main.c    ****   SystemClock_Config();
  94:Src/main.c    **** 
  95:Src/main.c    ****   /* USER CODE BEGIN SysInit */
  96:Src/main.c    **** 
  97:Src/main.c    ****   /* USER CODE END SysInit */
  98:Src/main.c    **** 
  99:Src/main.c    ****   /* Initialize all configured peripherals */
 100:Src/main.c    ****   MX_GPIO_Init();
 101:Src/main.c    ****   MX_TIM1_Init();
 102:Src/main.c    ****   MX_USART2_UART_Init();
 103:Src/main.c    ****   MX_TIM16_Init();
 104:Src/main.c    ****   /* USER CODE BEGIN 2 */
 105:Src/main.c    ****   HAL_TIM_Base_Start_IT(&htim1);
 106:Src/main.c    ****   HAL_TIM_Base_Start(&htim16);
 107:Src/main.c    ****   HAL_TIM_OC_Start(&htim16, TIM_CHANNEL_1);
 108:Src/main.c    ****   TIM16->CCR1 = 10;
 109:Src/main.c    ****   HAL_TIM_IC_Start_IT(&htim1, TIM_CHANNEL_1);
 110:Src/main.c    **** 
 111:Src/main.c    ****   /* USER CODE END 2 */
 112:Src/main.c    **** 
 113:Src/main.c    ****   /* Infinite loop */
 114:Src/main.c    ****   /* USER CODE BEGIN WHILE */
 115:Src/main.c    ****   while (1)
 116:Src/main.c    ****   {
 117:Src/main.c    ****   entfernung = difference / 58;
 118:Src/main.c    ****   sprintf((char*)buf, "%d cm\n\r", entfernung);
 119:Src/main.c    ****   HAL_UART_Transmit(&huart2, buf, strlen((char*)buf), 500);
 120:Src/main.c    ****   HAL_Delay(1000);
 121:Src/main.c    ****     /* USER CODE END WHILE */
 122:Src/main.c    **** 
 123:Src/main.c    ****     /* USER CODE BEGIN 3 */
 124:Src/main.c    ****   }
 125:Src/main.c    ****   /* USER CODE END 3 */
 126:Src/main.c    **** }
 127:Src/main.c    **** 
 128:Src/main.c    **** /**
 129:Src/main.c    ****   * @brief System Clock Configuration
 130:Src/main.c    ****   * @retval None
 131:Src/main.c    ****   */
 132:Src/main.c    **** void SystemClock_Config(void)
 133:Src/main.c    **** {
 134:Src/main.c    ****   RCC_OscInitTypeDef RCC_OscInitStruct = {0};
 135:Src/main.c    ****   RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};
 136:Src/main.c    **** 
 137:Src/main.c    ****   /** Configure the main internal regulator output voltage
 138:Src/main.c    ****   */
 139:Src/main.c    ****   if (HAL_PWREx_ControlVoltageScaling(PWR_REGULATOR_VOLTAGE_SCALE1) != HAL_OK)
 140:Src/main.c    ****   {
 141:Src/main.c    ****     Error_Handler();
 142:Src/main.c    ****   }
 143:Src/main.c    ****   /** Configure LSE Drive Capability
 144:Src/main.c    ****   */
 145:Src/main.c    ****   HAL_PWR_EnableBkUpAccess();
ARM GAS  /tmp/ccUAoPyn.s 			page 4


 146:Src/main.c    ****   __HAL_RCC_LSEDRIVE_CONFIG(RCC_LSEDRIVE_LOW);
 147:Src/main.c    ****   /** Initializes the RCC Oscillators according to the specified parameters
 148:Src/main.c    ****   * in the RCC_OscInitTypeDef structure.
 149:Src/main.c    ****   */
 150:Src/main.c    ****   RCC_OscInitStruct.OscillatorType = RCC_OSCILLATORTYPE_LSE|RCC_OSCILLATORTYPE_MSI;
 151:Src/main.c    ****   RCC_OscInitStruct.LSEState = RCC_LSE_ON;
 152:Src/main.c    ****   RCC_OscInitStruct.MSIState = RCC_MSI_ON;
 153:Src/main.c    ****   RCC_OscInitStruct.MSICalibrationValue = 0;
 154:Src/main.c    ****   RCC_OscInitStruct.MSIClockRange = RCC_MSIRANGE_6;
 155:Src/main.c    ****   RCC_OscInitStruct.PLL.PLLState = RCC_PLL_ON;
 156:Src/main.c    ****   RCC_OscInitStruct.PLL.PLLSource = RCC_PLLSOURCE_MSI;
 157:Src/main.c    ****   RCC_OscInitStruct.PLL.PLLM = 1;
 158:Src/main.c    ****   RCC_OscInitStruct.PLL.PLLN = 16;
 159:Src/main.c    ****   RCC_OscInitStruct.PLL.PLLP = RCC_PLLP_DIV7;
 160:Src/main.c    ****   RCC_OscInitStruct.PLL.PLLQ = RCC_PLLQ_DIV2;
 161:Src/main.c    ****   RCC_OscInitStruct.PLL.PLLR = RCC_PLLR_DIV2;
 162:Src/main.c    ****   if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 163:Src/main.c    ****   {
 164:Src/main.c    ****     Error_Handler();
 165:Src/main.c    ****   }
 166:Src/main.c    ****   /** Initializes the CPU, AHB and APB buses clocks
 167:Src/main.c    ****   */
 168:Src/main.c    ****   RCC_ClkInitStruct.ClockType = RCC_CLOCKTYPE_HCLK|RCC_CLOCKTYPE_SYSCLK
 169:Src/main.c    ****                               |RCC_CLOCKTYPE_PCLK1|RCC_CLOCKTYPE_PCLK2;
 170:Src/main.c    ****   RCC_ClkInitStruct.SYSCLKSource = RCC_SYSCLKSOURCE_PLLCLK;
 171:Src/main.c    ****   RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV1;
 172:Src/main.c    ****   RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV1;
 173:Src/main.c    ****   RCC_ClkInitStruct.APB2CLKDivider = RCC_HCLK_DIV1;
 174:Src/main.c    **** 
 175:Src/main.c    ****   if (HAL_RCC_ClockConfig(&RCC_ClkInitStruct, FLASH_LATENCY_1) != HAL_OK)
 176:Src/main.c    ****   {
 177:Src/main.c    ****     Error_Handler();
 178:Src/main.c    ****   }
 179:Src/main.c    ****   /** Enable MSI Auto calibration
 180:Src/main.c    ****   */
 181:Src/main.c    ****   HAL_RCCEx_EnableMSIPLLMode();
 182:Src/main.c    **** }
 183:Src/main.c    **** 
 184:Src/main.c    **** /**
 185:Src/main.c    ****   * @brief TIM1 Initialization Function
 186:Src/main.c    ****   * @param None
 187:Src/main.c    ****   * @retval None
 188:Src/main.c    ****   */
 189:Src/main.c    **** static void MX_TIM1_Init(void)
 190:Src/main.c    **** {
 191:Src/main.c    **** 
 192:Src/main.c    ****   /* USER CODE BEGIN TIM1_Init 0 */
 193:Src/main.c    **** 
 194:Src/main.c    ****   /* USER CODE END TIM1_Init 0 */
 195:Src/main.c    **** 
 196:Src/main.c    ****   TIM_MasterConfigTypeDef sMasterConfig = {0};
 197:Src/main.c    ****   TIM_IC_InitTypeDef sConfigIC = {0};
 198:Src/main.c    **** 
 199:Src/main.c    ****   /* USER CODE BEGIN TIM1_Init 1 */
 200:Src/main.c    **** 
 201:Src/main.c    ****   /* USER CODE END TIM1_Init 1 */
 202:Src/main.c    ****   htim1.Instance = TIM1;
ARM GAS  /tmp/ccUAoPyn.s 			page 5


 203:Src/main.c    ****   htim1.Init.Prescaler = 32-1;
 204:Src/main.c    ****   htim1.Init.CounterMode = TIM_COUNTERMODE_UP;
 205:Src/main.c    ****   htim1.Init.Period = 50000;
 206:Src/main.c    ****   htim1.Init.ClockDivision = TIM_CLOCKDIVISION_DIV1;
 207:Src/main.c    ****   htim1.Init.RepetitionCounter = 0;
 208:Src/main.c    ****   htim1.Init.AutoReloadPreload = TIM_AUTORELOAD_PRELOAD_DISABLE;
 209:Src/main.c    ****   if (HAL_TIM_IC_Init(&htim1) != HAL_OK)
 210:Src/main.c    ****   {
 211:Src/main.c    ****     Error_Handler();
 212:Src/main.c    ****   }
 213:Src/main.c    ****   sMasterConfig.MasterOutputTrigger = TIM_TRGO_RESET;
 214:Src/main.c    ****   sMasterConfig.MasterOutputTrigger2 = TIM_TRGO2_RESET;
 215:Src/main.c    ****   sMasterConfig.MasterSlaveMode = TIM_MASTERSLAVEMODE_DISABLE;
 216:Src/main.c    ****   if (HAL_TIMEx_MasterConfigSynchronization(&htim1, &sMasterConfig) != HAL_OK)
 217:Src/main.c    ****   {
 218:Src/main.c    ****     Error_Handler();
 219:Src/main.c    ****   }
 220:Src/main.c    ****   sConfigIC.ICPolarity = TIM_INPUTCHANNELPOLARITY_BOTHEDGE;
 221:Src/main.c    ****   sConfigIC.ICSelection = TIM_ICSELECTION_DIRECTTI;
 222:Src/main.c    ****   sConfigIC.ICPrescaler = TIM_ICPSC_DIV1;
 223:Src/main.c    ****   sConfigIC.ICFilter = 0;
 224:Src/main.c    ****   if (HAL_TIM_IC_ConfigChannel(&htim1, &sConfigIC, TIM_CHANNEL_1) != HAL_OK)
 225:Src/main.c    ****   {
 226:Src/main.c    ****     Error_Handler();
 227:Src/main.c    ****   }
 228:Src/main.c    ****   /* USER CODE BEGIN TIM1_Init 2 */
 229:Src/main.c    **** 
 230:Src/main.c    ****   /* USER CODE END TIM1_Init 2 */
 231:Src/main.c    **** 
 232:Src/main.c    **** }
 233:Src/main.c    **** 
 234:Src/main.c    **** /**
 235:Src/main.c    ****   * @brief TIM16 Initialization Function
 236:Src/main.c    ****   * @param None
 237:Src/main.c    ****   * @retval None
 238:Src/main.c    ****   */
 239:Src/main.c    **** static void MX_TIM16_Init(void)
 240:Src/main.c    **** {
 241:Src/main.c    **** 
 242:Src/main.c    ****   /* USER CODE BEGIN TIM16_Init 0 */
 243:Src/main.c    **** 
 244:Src/main.c    ****   /* USER CODE END TIM16_Init 0 */
 245:Src/main.c    **** 
 246:Src/main.c    ****   TIM_OC_InitTypeDef sConfigOC = {0};
 247:Src/main.c    ****   TIM_BreakDeadTimeConfigTypeDef sBreakDeadTimeConfig = {0};
 248:Src/main.c    **** 
 249:Src/main.c    ****   /* USER CODE BEGIN TIM16_Init 1 */
 250:Src/main.c    **** 
 251:Src/main.c    ****   /* USER CODE END TIM16_Init 1 */
 252:Src/main.c    ****   htim16.Instance = TIM16;
 253:Src/main.c    ****   htim16.Init.Prescaler = 32-1;
 254:Src/main.c    ****   htim16.Init.CounterMode = TIM_COUNTERMODE_UP;
 255:Src/main.c    ****   htim16.Init.Period = 65535;
 256:Src/main.c    ****   htim16.Init.ClockDivision = TIM_CLOCKDIVISION_DIV1;
 257:Src/main.c    ****   htim16.Init.RepetitionCounter = 0;
 258:Src/main.c    ****   htim16.Init.AutoReloadPreload = TIM_AUTORELOAD_PRELOAD_DISABLE;
 259:Src/main.c    ****   if (HAL_TIM_Base_Init(&htim16) != HAL_OK)
ARM GAS  /tmp/ccUAoPyn.s 			page 6


 260:Src/main.c    ****   {
 261:Src/main.c    ****     Error_Handler();
 262:Src/main.c    ****   }
 263:Src/main.c    ****   if (HAL_TIM_PWM_Init(&htim16) != HAL_OK)
 264:Src/main.c    ****   {
 265:Src/main.c    ****     Error_Handler();
 266:Src/main.c    ****   }
 267:Src/main.c    ****   sConfigOC.OCMode = TIM_OCMODE_PWM2;
 268:Src/main.c    ****   sConfigOC.Pulse = 0;
 269:Src/main.c    ****   sConfigOC.OCPolarity = TIM_OCPOLARITY_HIGH;
 270:Src/main.c    ****   sConfigOC.OCNPolarity = TIM_OCNPOLARITY_HIGH;
 271:Src/main.c    ****   sConfigOC.OCFastMode = TIM_OCFAST_DISABLE;
 272:Src/main.c    ****   sConfigOC.OCIdleState = TIM_OCIDLESTATE_RESET;
 273:Src/main.c    ****   sConfigOC.OCNIdleState = TIM_OCNIDLESTATE_RESET;
 274:Src/main.c    ****   if (HAL_TIM_PWM_ConfigChannel(&htim16, &sConfigOC, TIM_CHANNEL_1) != HAL_OK)
 275:Src/main.c    ****   {
 276:Src/main.c    ****     Error_Handler();
 277:Src/main.c    ****   }
 278:Src/main.c    ****   sBreakDeadTimeConfig.OffStateRunMode = TIM_OSSR_DISABLE;
 279:Src/main.c    ****   sBreakDeadTimeConfig.OffStateIDLEMode = TIM_OSSI_DISABLE;
 280:Src/main.c    ****   sBreakDeadTimeConfig.LockLevel = TIM_LOCKLEVEL_OFF;
 281:Src/main.c    ****   sBreakDeadTimeConfig.DeadTime = 0;
 282:Src/main.c    ****   sBreakDeadTimeConfig.BreakState = TIM_BREAK_DISABLE;
 283:Src/main.c    ****   sBreakDeadTimeConfig.BreakPolarity = TIM_BREAKPOLARITY_HIGH;
 284:Src/main.c    ****   sBreakDeadTimeConfig.AutomaticOutput = TIM_AUTOMATICOUTPUT_DISABLE;
 285:Src/main.c    ****   if (HAL_TIMEx_ConfigBreakDeadTime(&htim16, &sBreakDeadTimeConfig) != HAL_OK)
 286:Src/main.c    ****   {
 287:Src/main.c    ****     Error_Handler();
 288:Src/main.c    ****   }
 289:Src/main.c    ****   /* USER CODE BEGIN TIM16_Init 2 */
 290:Src/main.c    **** 
 291:Src/main.c    ****   /* USER CODE END TIM16_Init 2 */
 292:Src/main.c    ****   HAL_TIM_MspPostInit(&htim16);
 293:Src/main.c    **** 
 294:Src/main.c    **** }
 295:Src/main.c    **** 
 296:Src/main.c    **** /**
 297:Src/main.c    ****   * @brief USART2 Initialization Function
 298:Src/main.c    ****   * @param None
 299:Src/main.c    ****   * @retval None
 300:Src/main.c    ****   */
 301:Src/main.c    **** static void MX_USART2_UART_Init(void)
 302:Src/main.c    **** {
 303:Src/main.c    **** 
 304:Src/main.c    ****   /* USER CODE BEGIN USART2_Init 0 */
 305:Src/main.c    **** 
 306:Src/main.c    ****   /* USER CODE END USART2_Init 0 */
 307:Src/main.c    **** 
 308:Src/main.c    ****   /* USER CODE BEGIN USART2_Init 1 */
 309:Src/main.c    **** 
 310:Src/main.c    ****   /* USER CODE END USART2_Init 1 */
 311:Src/main.c    ****   huart2.Instance = USART2;
 312:Src/main.c    ****   huart2.Init.BaudRate = 115200;
 313:Src/main.c    ****   huart2.Init.WordLength = UART_WORDLENGTH_8B;
 314:Src/main.c    ****   huart2.Init.StopBits = UART_STOPBITS_1;
 315:Src/main.c    ****   huart2.Init.Parity = UART_PARITY_NONE;
 316:Src/main.c    ****   huart2.Init.Mode = UART_MODE_TX_RX;
ARM GAS  /tmp/ccUAoPyn.s 			page 7


 317:Src/main.c    ****   huart2.Init.HwFlowCtl = UART_HWCONTROL_NONE;
 318:Src/main.c    ****   huart2.Init.OverSampling = UART_OVERSAMPLING_16;
 319:Src/main.c    ****   huart2.Init.OneBitSampling = UART_ONE_BIT_SAMPLE_DISABLE;
 320:Src/main.c    ****   huart2.AdvancedInit.AdvFeatureInit = UART_ADVFEATURE_NO_INIT;
 321:Src/main.c    ****   if (HAL_UART_Init(&huart2) != HAL_OK)
 322:Src/main.c    ****   {
 323:Src/main.c    ****     Error_Handler();
 324:Src/main.c    ****   }
 325:Src/main.c    ****   /* USER CODE BEGIN USART2_Init 2 */
 326:Src/main.c    **** 
 327:Src/main.c    ****   /* USER CODE END USART2_Init 2 */
 328:Src/main.c    **** 
 329:Src/main.c    **** }
 330:Src/main.c    **** 
 331:Src/main.c    **** /**
 332:Src/main.c    ****   * @brief GPIO Initialization Function
 333:Src/main.c    ****   * @param None
 334:Src/main.c    ****   * @retval None
 335:Src/main.c    ****   */
 336:Src/main.c    **** static void MX_GPIO_Init(void)
 337:Src/main.c    **** {
  28              		.loc 1 337 1 view -0
  29              		.cfi_startproc
  30              		@ args = 0, pretend = 0, frame = 32
  31              		@ frame_needed = 0, uses_anonymous_args = 0
  32 0000 30B5     		push	{r4, r5, lr}
  33              	.LCFI0:
  34              		.cfi_def_cfa_offset 12
  35              		.cfi_offset 4, -12
  36              		.cfi_offset 5, -8
  37              		.cfi_offset 14, -4
  38 0002 89B0     		sub	sp, sp, #36
  39              	.LCFI1:
  40              		.cfi_def_cfa_offset 48
 338:Src/main.c    ****   GPIO_InitTypeDef GPIO_InitStruct = {0};
  41              		.loc 1 338 3 view .LVU1
  42              		.loc 1 338 20 is_stmt 0 view .LVU2
  43 0004 0024     		movs	r4, #0
  44 0006 0394     		str	r4, [sp, #12]
  45 0008 0494     		str	r4, [sp, #16]
  46 000a 0594     		str	r4, [sp, #20]
  47 000c 0694     		str	r4, [sp, #24]
  48 000e 0794     		str	r4, [sp, #28]
 339:Src/main.c    **** 
 340:Src/main.c    ****   /* GPIO Ports Clock Enable */
 341:Src/main.c    ****   __HAL_RCC_GPIOC_CLK_ENABLE();
  49              		.loc 1 341 3 is_stmt 1 view .LVU3
  50              	.LBB4:
  51              		.loc 1 341 3 view .LVU4
  52              		.loc 1 341 3 view .LVU5
  53 0010 164B     		ldr	r3, .L3
  54 0012 DA6C     		ldr	r2, [r3, #76]
  55 0014 42F00402 		orr	r2, r2, #4
  56 0018 DA64     		str	r2, [r3, #76]
  57              		.loc 1 341 3 view .LVU6
  58 001a DA6C     		ldr	r2, [r3, #76]
  59 001c 02F00402 		and	r2, r2, #4
ARM GAS  /tmp/ccUAoPyn.s 			page 8


  60 0020 0092     		str	r2, [sp]
  61              		.loc 1 341 3 view .LVU7
  62 0022 009A     		ldr	r2, [sp]
  63              	.LBE4:
  64              		.loc 1 341 3 view .LVU8
 342:Src/main.c    ****   __HAL_RCC_GPIOA_CLK_ENABLE();
  65              		.loc 1 342 3 view .LVU9
  66              	.LBB5:
  67              		.loc 1 342 3 view .LVU10
  68              		.loc 1 342 3 view .LVU11
  69 0024 DA6C     		ldr	r2, [r3, #76]
  70 0026 42F00102 		orr	r2, r2, #1
  71 002a DA64     		str	r2, [r3, #76]
  72              		.loc 1 342 3 view .LVU12
  73 002c DA6C     		ldr	r2, [r3, #76]
  74 002e 02F00102 		and	r2, r2, #1
  75 0032 0192     		str	r2, [sp, #4]
  76              		.loc 1 342 3 view .LVU13
  77 0034 019A     		ldr	r2, [sp, #4]
  78              	.LBE5:
  79              		.loc 1 342 3 view .LVU14
 343:Src/main.c    ****   __HAL_RCC_GPIOB_CLK_ENABLE();
  80              		.loc 1 343 3 view .LVU15
  81              	.LBB6:
  82              		.loc 1 343 3 view .LVU16
  83              		.loc 1 343 3 view .LVU17
  84 0036 DA6C     		ldr	r2, [r3, #76]
  85 0038 42F00202 		orr	r2, r2, #2
  86 003c DA64     		str	r2, [r3, #76]
  87              		.loc 1 343 3 view .LVU18
  88 003e DB6C     		ldr	r3, [r3, #76]
  89 0040 03F00203 		and	r3, r3, #2
  90 0044 0293     		str	r3, [sp, #8]
  91              		.loc 1 343 3 view .LVU19
  92 0046 029B     		ldr	r3, [sp, #8]
  93              	.LBE6:
  94              		.loc 1 343 3 view .LVU20
 344:Src/main.c    **** 
 345:Src/main.c    ****   /*Configure GPIO pin Output Level */
 346:Src/main.c    ****   HAL_GPIO_WritePin(LD3_GPIO_Port, LD3_Pin, GPIO_PIN_RESET);
  95              		.loc 1 346 3 view .LVU21
  96 0048 094D     		ldr	r5, .L3+4
  97 004a 2246     		mov	r2, r4
  98 004c 0821     		movs	r1, #8
  99 004e 2846     		mov	r0, r5
 100 0050 FFF7FEFF 		bl	HAL_GPIO_WritePin
 101              	.LVL0:
 347:Src/main.c    **** 
 348:Src/main.c    ****   /*Configure GPIO pin : LD3_Pin */
 349:Src/main.c    ****   GPIO_InitStruct.Pin = LD3_Pin;
 102              		.loc 1 349 3 view .LVU22
 103              		.loc 1 349 23 is_stmt 0 view .LVU23
 104 0054 0823     		movs	r3, #8
 105 0056 0393     		str	r3, [sp, #12]
 350:Src/main.c    ****   GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
 106              		.loc 1 350 3 is_stmt 1 view .LVU24
 107              		.loc 1 350 24 is_stmt 0 view .LVU25
ARM GAS  /tmp/ccUAoPyn.s 			page 9


 108 0058 0123     		movs	r3, #1
 109 005a 0493     		str	r3, [sp, #16]
 351:Src/main.c    ****   GPIO_InitStruct.Pull = GPIO_NOPULL;
 110              		.loc 1 351 3 is_stmt 1 view .LVU26
 111              		.loc 1 351 24 is_stmt 0 view .LVU27
 112 005c 0594     		str	r4, [sp, #20]
 352:Src/main.c    ****   GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 113              		.loc 1 352 3 is_stmt 1 view .LVU28
 114              		.loc 1 352 25 is_stmt 0 view .LVU29
 115 005e 0694     		str	r4, [sp, #24]
 353:Src/main.c    ****   HAL_GPIO_Init(LD3_GPIO_Port, &GPIO_InitStruct);
 116              		.loc 1 353 3 is_stmt 1 view .LVU30
 117 0060 03A9     		add	r1, sp, #12
 118 0062 2846     		mov	r0, r5
 119 0064 FFF7FEFF 		bl	HAL_GPIO_Init
 120              	.LVL1:
 354:Src/main.c    **** 
 355:Src/main.c    **** }
 121              		.loc 1 355 1 is_stmt 0 view .LVU31
 122 0068 09B0     		add	sp, sp, #36
 123              	.LCFI2:
 124              		.cfi_def_cfa_offset 12
 125              		@ sp needed
 126 006a 30BD     		pop	{r4, r5, pc}
 127              	.L4:
 128              		.align	2
 129              	.L3:
 130 006c 00100240 		.word	1073876992
 131 0070 00040048 		.word	1207960576
 132              		.cfi_endproc
 133              	.LFE140:
 135              		.section	.text.HAL_TIM_IC_CaptureCallback,"ax",%progbits
 136              		.align	1
 137              		.global	HAL_TIM_IC_CaptureCallback
 138              		.syntax unified
 139              		.thumb
 140              		.thumb_func
 141              		.fpu fpv4-sp-d16
 143              	HAL_TIM_IC_CaptureCallback:
 144              	.LVL2:
 145              	.LFB141:
 356:Src/main.c    **** 
 357:Src/main.c    **** /* USER CODE BEGIN 4 */
 358:Src/main.c    **** void HAL_TIM_IC_CaptureCallback(TIM_HandleTypeDef* htim)
 359:Src/main.c    **** {
 146              		.loc 1 359 1 is_stmt 1 view -0
 147              		.cfi_startproc
 148              		@ args = 0, pretend = 0, frame = 0
 149              		@ frame_needed = 0, uses_anonymous_args = 0
 150              		@ link register save eliminated.
 360:Src/main.c    ****   if(status == 0)
 151              		.loc 1 360 3 view .LVU33
 152              		.loc 1 360 13 is_stmt 0 view .LVU34
 153 0000 1F4B     		ldr	r3, .L11
 154 0002 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 155              		.loc 1 360 5 view .LVU35
 156 0004 4BB9     		cbnz	r3, .L6
ARM GAS  /tmp/ccUAoPyn.s 			page 10


 361:Src/main.c    ****   {
 362:Src/main.c    ****     rise = __HAL_TIM_GET_COMPARE(&htim1, TIM_CHANNEL_1);
 157              		.loc 1 362 5 is_stmt 1 view .LVU36
 158              		.loc 1 362 12 is_stmt 0 view .LVU37
 159 0006 1F4B     		ldr	r3, .L11+4
 160 0008 1B68     		ldr	r3, [r3]
 161 000a 5B6B     		ldr	r3, [r3, #52]
 162              		.loc 1 362 10 view .LVU38
 163 000c 9BB2     		uxth	r3, r3
 164 000e 1E4A     		ldr	r2, .L11+8
 165 0010 1380     		strh	r3, [r2]	@ movhi
 363:Src/main.c    ****     status = 1;
 166              		.loc 1 363 5 is_stmt 1 view .LVU39
 167              		.loc 1 363 12 is_stmt 0 view .LVU40
 168 0012 1B4B     		ldr	r3, .L11
 169 0014 0122     		movs	r2, #1
 170 0016 1A70     		strb	r2, [r3]
 171 0018 7047     		bx	lr
 172              	.L6:
 364:Src/main.c    ****   }
 365:Src/main.c    ****   else if(status == 1) 
 173              		.loc 1 365 8 is_stmt 1 view .LVU41
 174              		.loc 1 365 18 is_stmt 0 view .LVU42
 175 001a 194B     		ldr	r3, .L11
 176 001c 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 177 001e DBB2     		uxtb	r3, r3
 178              		.loc 1 365 10 view .LVU43
 179 0020 012B     		cmp	r3, #1
 180 0022 00D0     		beq	.L10
 181              	.L5:
 366:Src/main.c    ****   {
 367:Src/main.c    ****     fall = __HAL_TIM_GET_COMPARE(&htim1, TIM_CHANNEL_1);
 368:Src/main.c    ****     if(rise < fall)
 369:Src/main.c    ****     {
 370:Src/main.c    ****       difference = fall-rise;
 371:Src/main.c    ****     } else {
 372:Src/main.c    ****       difference = 50000-rise-fall;
 373:Src/main.c    ****       
 374:Src/main.c    ****     }
 375:Src/main.c    ****     rise = 0;
 376:Src/main.c    ****     fall = 0;
 377:Src/main.c    ****     status = 0;
 378:Src/main.c    **** 
 379:Src/main.c    ****   }
 380:Src/main.c    **** }
 182              		.loc 1 380 1 view .LVU44
 183 0024 7047     		bx	lr
 184              	.L10:
 367:Src/main.c    ****     if(rise < fall)
 185              		.loc 1 367 5 is_stmt 1 view .LVU45
 367:Src/main.c    ****     if(rise < fall)
 186              		.loc 1 367 12 is_stmt 0 view .LVU46
 187 0026 174B     		ldr	r3, .L11+4
 188 0028 1B68     		ldr	r3, [r3]
 189 002a 5B6B     		ldr	r3, [r3, #52]
 367:Src/main.c    ****     if(rise < fall)
 190              		.loc 1 367 10 view .LVU47
ARM GAS  /tmp/ccUAoPyn.s 			page 11


 191 002c 9BB2     		uxth	r3, r3
 192 002e 1749     		ldr	r1, .L11+12
 193 0030 0B80     		strh	r3, [r1]	@ movhi
 368:Src/main.c    ****     {
 194              		.loc 1 368 5 is_stmt 1 view .LVU48
 368:Src/main.c    ****     {
 195              		.loc 1 368 13 is_stmt 0 view .LVU49
 196 0032 154B     		ldr	r3, .L11+8
 197 0034 1A88     		ldrh	r2, [r3]
 198 0036 92B2     		uxth	r2, r2
 199 0038 0B88     		ldrh	r3, [r1]
 200 003a 9BB2     		uxth	r3, r3
 368:Src/main.c    ****     {
 201              		.loc 1 368 7 view .LVU50
 202 003c 9A42     		cmp	r2, r3
 203 003e 10D2     		bcs	.L8
 370:Src/main.c    ****     } else {
 204              		.loc 1 370 7 is_stmt 1 view .LVU51
 370:Src/main.c    ****     } else {
 205              		.loc 1 370 24 is_stmt 0 view .LVU52
 206 0040 0B88     		ldrh	r3, [r1]
 207 0042 9BB2     		uxth	r3, r3
 208 0044 104A     		ldr	r2, .L11+8
 209 0046 1288     		ldrh	r2, [r2]
 210 0048 92B2     		uxth	r2, r2
 211 004a 9B1A     		subs	r3, r3, r2
 212 004c 9BB2     		uxth	r3, r3
 370:Src/main.c    ****     } else {
 213              		.loc 1 370 18 view .LVU53
 214 004e 104A     		ldr	r2, .L11+16
 215 0050 1380     		strh	r3, [r2]	@ movhi
 216              	.L9:
 375:Src/main.c    ****     fall = 0;
 217              		.loc 1 375 5 is_stmt 1 view .LVU54
 375:Src/main.c    ****     fall = 0;
 218              		.loc 1 375 10 is_stmt 0 view .LVU55
 219 0052 0023     		movs	r3, #0
 220 0054 0C4A     		ldr	r2, .L11+8
 221 0056 1380     		strh	r3, [r2]	@ movhi
 376:Src/main.c    ****     status = 0;
 222              		.loc 1 376 5 is_stmt 1 view .LVU56
 376:Src/main.c    ****     status = 0;
 223              		.loc 1 376 10 is_stmt 0 view .LVU57
 224 0058 0C4A     		ldr	r2, .L11+12
 225 005a 1380     		strh	r3, [r2]	@ movhi
 377:Src/main.c    **** 
 226              		.loc 1 377 5 is_stmt 1 view .LVU58
 377:Src/main.c    **** 
 227              		.loc 1 377 12 is_stmt 0 view .LVU59
 228 005c 084A     		ldr	r2, .L11
 229 005e 1370     		strb	r3, [r2]
 230              		.loc 1 380 1 view .LVU60
 231 0060 E0E7     		b	.L5
 232              	.L8:
 372:Src/main.c    ****       
 233              		.loc 1 372 7 is_stmt 1 view .LVU61
 372:Src/main.c    ****       
ARM GAS  /tmp/ccUAoPyn.s 			page 12


 234              		.loc 1 372 30 is_stmt 0 view .LVU62
 235 0062 094B     		ldr	r3, .L11+8
 236 0064 1B88     		ldrh	r3, [r3]
 237 0066 094A     		ldr	r2, .L11+12
 238 0068 1288     		ldrh	r2, [r2]
 239 006a 92B2     		uxth	r2, r2
 240 006c 12FA83F3 		uxtah	r3, r2, r3
 241 0070 C3F54343 		rsb	r3, r3, #49920
 242 0074 5033     		adds	r3, r3, #80
 243 0076 9BB2     		uxth	r3, r3
 372:Src/main.c    ****       
 244              		.loc 1 372 18 view .LVU63
 245 0078 054A     		ldr	r2, .L11+16
 246 007a 1380     		strh	r3, [r2]	@ movhi
 247 007c E9E7     		b	.L9
 248              	.L12:
 249 007e 00BF     		.align	2
 250              	.L11:
 251 0080 00000000 		.word	.LANCHOR0
 252 0084 00000000 		.word	htim1
 253 0088 00000000 		.word	.LANCHOR1
 254 008c 00000000 		.word	.LANCHOR2
 255 0090 00000000 		.word	.LANCHOR3
 256              		.cfi_endproc
 257              	.LFE141:
 259              		.section	.text.Error_Handler,"ax",%progbits
 260              		.align	1
 261              		.global	Error_Handler
 262              		.syntax unified
 263              		.thumb
 264              		.thumb_func
 265              		.fpu fpv4-sp-d16
 267              	Error_Handler:
 268              	.LFB142:
 381:Src/main.c    ****     
 382:Src/main.c    **** /* USER CODE END 4 */
 383:Src/main.c    **** 
 384:Src/main.c    **** /**
 385:Src/main.c    ****   * @brief  This function is executed in case of error occurrence.
 386:Src/main.c    ****   * @retval None
 387:Src/main.c    ****   */
 388:Src/main.c    **** void Error_Handler(void)
 389:Src/main.c    **** {
 269              		.loc 1 389 1 is_stmt 1 view -0
 270              		.cfi_startproc
 271              		@ Volatile: function does not return.
 272              		@ args = 0, pretend = 0, frame = 0
 273              		@ frame_needed = 0, uses_anonymous_args = 0
 274              		@ link register save eliminated.
 390:Src/main.c    ****   /* USER CODE BEGIN Error_Handler_Debug */
 391:Src/main.c    ****   /* User can add his own implementation to report the HAL error return state */
 392:Src/main.c    ****   __disable_irq();
 275              		.loc 1 392 3 view .LVU65
 276              	.LBB7:
 277              	.LBI7:
 278              		.file 2 "Drivers/CMSIS/Include/cmsis_gcc.h"
   1:Drivers/CMSIS/Include/cmsis_gcc.h **** /**************************************************************************//**
ARM GAS  /tmp/ccUAoPyn.s 			page 13


   2:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @file     cmsis_gcc.h
   3:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @brief    CMSIS compiler GCC header file
   4:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @version  V5.2.0
   5:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @date     08. May 2019
   6:Drivers/CMSIS/Include/cmsis_gcc.h ****  ******************************************************************************/
   7:Drivers/CMSIS/Include/cmsis_gcc.h **** /*
   8:Drivers/CMSIS/Include/cmsis_gcc.h ****  * Copyright (c) 2009-2019 Arm Limited. All rights reserved.
   9:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  10:Drivers/CMSIS/Include/cmsis_gcc.h ****  * SPDX-License-Identifier: Apache-2.0
  11:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  12:Drivers/CMSIS/Include/cmsis_gcc.h ****  * Licensed under the Apache License, Version 2.0 (the License); you may
  13:Drivers/CMSIS/Include/cmsis_gcc.h ****  * not use this file except in compliance with the License.
  14:Drivers/CMSIS/Include/cmsis_gcc.h ****  * You may obtain a copy of the License at
  15:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  16:Drivers/CMSIS/Include/cmsis_gcc.h ****  * www.apache.org/licenses/LICENSE-2.0
  17:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  18:Drivers/CMSIS/Include/cmsis_gcc.h ****  * Unless required by applicable law or agreed to in writing, software
  19:Drivers/CMSIS/Include/cmsis_gcc.h ****  * distributed under the License is distributed on an AS IS BASIS, WITHOUT
  20:Drivers/CMSIS/Include/cmsis_gcc.h ****  * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  21:Drivers/CMSIS/Include/cmsis_gcc.h ****  * See the License for the specific language governing permissions and
  22:Drivers/CMSIS/Include/cmsis_gcc.h ****  * limitations under the License.
  23:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
  24:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  25:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __CMSIS_GCC_H
  26:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __CMSIS_GCC_H
  27:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  28:Drivers/CMSIS/Include/cmsis_gcc.h **** /* ignore some GCC warnings */
  29:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic push
  30:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wsign-conversion"
  31:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wconversion"
  32:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wunused-parameter"
  33:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  34:Drivers/CMSIS/Include/cmsis_gcc.h **** /* Fallback for __has_builtin */
  35:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __has_builtin
  36:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __has_builtin(x) (0)
  37:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  38:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  39:Drivers/CMSIS/Include/cmsis_gcc.h **** /* CMSIS compiler specific defines */
  40:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __ASM
  41:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __ASM                                  __asm
  42:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  43:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __INLINE
  44:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __INLINE                               inline
  45:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  46:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __STATIC_INLINE
  47:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __STATIC_INLINE                        static inline
  48:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  49:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __STATIC_FORCEINLINE                 
  50:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __STATIC_FORCEINLINE                   __attribute__((always_inline)) static inline
  51:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif                                           
  52:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __NO_RETURN
  53:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __NO_RETURN                            __attribute__((__noreturn__))
  54:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  55:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __USED
  56:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __USED                                 __attribute__((used))
  57:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  58:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __WEAK
ARM GAS  /tmp/ccUAoPyn.s 			page 14


  59:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __WEAK                                 __attribute__((weak))
  60:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  61:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __PACKED
  62:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __PACKED                               __attribute__((packed, aligned(1)))
  63:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  64:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __PACKED_STRUCT
  65:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __PACKED_STRUCT                        struct __attribute__((packed, aligned(1)))
  66:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  67:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __PACKED_UNION
  68:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __PACKED_UNION                         union __attribute__((packed, aligned(1)))
  69:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  70:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT32        /* deprecated */
  71:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  72:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  73:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  74:Drivers/CMSIS/Include/cmsis_gcc.h ****   struct __attribute__((packed)) T_UINT32 { uint32_t v; };
  75:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
  76:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT32(x)                  (((struct T_UINT32 *)(x))->v)
  77:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  78:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT16_WRITE
  79:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  80:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  81:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  82:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT16_WRITE { uint16_t v; };
  83:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
  84:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT16_WRITE(addr, val)    (void)((((struct T_UINT16_WRITE *)(void *)(addr))-
  85:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  86:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT16_READ
  87:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  88:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  89:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  90:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT16_READ { uint16_t v; };
  91:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
  92:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT16_READ(addr)          (((const struct T_UINT16_READ *)(const void *)(add
  93:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  94:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT32_WRITE
  95:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  96:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  97:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  98:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT32_WRITE { uint32_t v; };
  99:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
 100:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT32_WRITE(addr, val)    (void)((((struct T_UINT32_WRITE *)(void *)(addr))-
 101:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 102:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT32_READ
 103:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
 104:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
 105:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
 106:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT32_READ { uint32_t v; };
 107:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
 108:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT32_READ(addr)          (((const struct T_UINT32_READ *)(const void *)(add
 109:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 110:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __ALIGNED
 111:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __ALIGNED(x)                           __attribute__((aligned(x)))
 112:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 113:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __RESTRICT
 114:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __RESTRICT                             __restrict
 115:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
ARM GAS  /tmp/ccUAoPyn.s 			page 15


 116:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __COMPILER_BARRIER
 117:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __COMPILER_BARRIER()                   __ASM volatile("":::"memory")
 118:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 119:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 120:Drivers/CMSIS/Include/cmsis_gcc.h **** /* #########################  Startup and Lowlevel Init  ######################## */
 121:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 122:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __PROGRAM_START
 123:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 124:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 125:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Initializes data and bss sections
 126:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details This default implementations initialized all data and additional bss
 127:Drivers/CMSIS/Include/cmsis_gcc.h ****            sections relying on .copy.table and .zero.table specified properly
 128:Drivers/CMSIS/Include/cmsis_gcc.h ****            in the used linker script.
 129:Drivers/CMSIS/Include/cmsis_gcc.h ****   
 130:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 131:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE __NO_RETURN void __cmsis_start(void)
 132:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 133:Drivers/CMSIS/Include/cmsis_gcc.h ****   extern void _start(void) __NO_RETURN;
 134:Drivers/CMSIS/Include/cmsis_gcc.h ****   
 135:Drivers/CMSIS/Include/cmsis_gcc.h ****   typedef struct {
 136:Drivers/CMSIS/Include/cmsis_gcc.h ****     uint32_t const* src;
 137:Drivers/CMSIS/Include/cmsis_gcc.h ****     uint32_t* dest;
 138:Drivers/CMSIS/Include/cmsis_gcc.h ****     uint32_t  wlen;
 139:Drivers/CMSIS/Include/cmsis_gcc.h ****   } __copy_table_t;
 140:Drivers/CMSIS/Include/cmsis_gcc.h ****   
 141:Drivers/CMSIS/Include/cmsis_gcc.h ****   typedef struct {
 142:Drivers/CMSIS/Include/cmsis_gcc.h ****     uint32_t* dest;
 143:Drivers/CMSIS/Include/cmsis_gcc.h ****     uint32_t  wlen;
 144:Drivers/CMSIS/Include/cmsis_gcc.h ****   } __zero_table_t;
 145:Drivers/CMSIS/Include/cmsis_gcc.h ****   
 146:Drivers/CMSIS/Include/cmsis_gcc.h ****   extern const __copy_table_t __copy_table_start__;
 147:Drivers/CMSIS/Include/cmsis_gcc.h ****   extern const __copy_table_t __copy_table_end__;
 148:Drivers/CMSIS/Include/cmsis_gcc.h ****   extern const __zero_table_t __zero_table_start__;
 149:Drivers/CMSIS/Include/cmsis_gcc.h ****   extern const __zero_table_t __zero_table_end__;
 150:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 151:Drivers/CMSIS/Include/cmsis_gcc.h ****   for (__copy_table_t const* pTable = &__copy_table_start__; pTable < &__copy_table_end__; ++pTable
 152:Drivers/CMSIS/Include/cmsis_gcc.h ****     for(uint32_t i=0u; i<pTable->wlen; ++i) {
 153:Drivers/CMSIS/Include/cmsis_gcc.h ****       pTable->dest[i] = pTable->src[i];
 154:Drivers/CMSIS/Include/cmsis_gcc.h ****     }
 155:Drivers/CMSIS/Include/cmsis_gcc.h ****   }
 156:Drivers/CMSIS/Include/cmsis_gcc.h ****  
 157:Drivers/CMSIS/Include/cmsis_gcc.h ****   for (__zero_table_t const* pTable = &__zero_table_start__; pTable < &__zero_table_end__; ++pTable
 158:Drivers/CMSIS/Include/cmsis_gcc.h ****     for(uint32_t i=0u; i<pTable->wlen; ++i) {
 159:Drivers/CMSIS/Include/cmsis_gcc.h ****       pTable->dest[i] = 0u;
 160:Drivers/CMSIS/Include/cmsis_gcc.h ****     }
 161:Drivers/CMSIS/Include/cmsis_gcc.h ****   }
 162:Drivers/CMSIS/Include/cmsis_gcc.h ****  
 163:Drivers/CMSIS/Include/cmsis_gcc.h ****   _start();
 164:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 165:Drivers/CMSIS/Include/cmsis_gcc.h ****   
 166:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __PROGRAM_START           __cmsis_start
 167:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 168:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 169:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __INITIAL_SP
 170:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __INITIAL_SP              __StackTop
 171:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 172:Drivers/CMSIS/Include/cmsis_gcc.h **** 
ARM GAS  /tmp/ccUAoPyn.s 			page 16


 173:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __STACK_LIMIT
 174:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __STACK_LIMIT             __StackLimit
 175:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 176:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 177:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __VECTOR_TABLE
 178:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __VECTOR_TABLE            __Vectors
 179:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 180:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 181:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __VECTOR_TABLE_ATTRIBUTE
 182:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __VECTOR_TABLE_ATTRIBUTE  __attribute((used, section(".vectors")))
 183:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 184:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 185:Drivers/CMSIS/Include/cmsis_gcc.h **** /* ###########################  Core Function Access  ########################### */
 186:Drivers/CMSIS/Include/cmsis_gcc.h **** /** \ingroup  CMSIS_Core_FunctionInterface
 187:Drivers/CMSIS/Include/cmsis_gcc.h ****     \defgroup CMSIS_Core_RegAccFunctions CMSIS Core Register Access Functions
 188:Drivers/CMSIS/Include/cmsis_gcc.h ****   @{
 189:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 190:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 191:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 192:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Enable IRQ Interrupts
 193:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Enables IRQ interrupts by clearing the I-bit in the CPSR.
 194:Drivers/CMSIS/Include/cmsis_gcc.h ****            Can only be executed in Privileged modes.
 195:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 196:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __enable_irq(void)
 197:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 198:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("cpsie i" : : : "memory");
 199:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 200:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 201:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 202:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 203:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Disable IRQ Interrupts
 204:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Disables IRQ interrupts by setting the I-bit in the CPSR.
 205:Drivers/CMSIS/Include/cmsis_gcc.h ****            Can only be executed in Privileged modes.
 206:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 207:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __disable_irq(void)
 279              		.loc 2 207 27 view .LVU66
 280              	.LBB8:
 208:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 209:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("cpsid i" : : : "memory");
 281              		.loc 2 209 3 view .LVU67
 282              		.syntax unified
 283              	@ 209 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 284 0000 72B6     		cpsid i
 285              	@ 0 "" 2
 286              		.thumb
 287              		.syntax unified
 288              	.L14:
 289              	.LBE8:
 290              	.LBE7:
 393:Src/main.c    ****   while (1)
 291              		.loc 1 393 3 discriminator 1 view .LVU68
 394:Src/main.c    ****   {
 395:Src/main.c    ****   }
 292              		.loc 1 395 3 discriminator 1 view .LVU69
 393:Src/main.c    ****   while (1)
 293              		.loc 1 393 9 discriminator 1 view .LVU70
 294 0002 FEE7     		b	.L14
ARM GAS  /tmp/ccUAoPyn.s 			page 17


 295              		.cfi_endproc
 296              	.LFE142:
 298              		.section	.text.MX_TIM1_Init,"ax",%progbits
 299              		.align	1
 300              		.syntax unified
 301              		.thumb
 302              		.thumb_func
 303              		.fpu fpv4-sp-d16
 305              	MX_TIM1_Init:
 306              	.LFB137:
 190:Src/main.c    **** 
 307              		.loc 1 190 1 view -0
 308              		.cfi_startproc
 309              		@ args = 0, pretend = 0, frame = 32
 310              		@ frame_needed = 0, uses_anonymous_args = 0
 311 0000 00B5     		push	{lr}
 312              	.LCFI3:
 313              		.cfi_def_cfa_offset 4
 314              		.cfi_offset 14, -4
 315 0002 89B0     		sub	sp, sp, #36
 316              	.LCFI4:
 317              		.cfi_def_cfa_offset 40
 196:Src/main.c    ****   TIM_IC_InitTypeDef sConfigIC = {0};
 318              		.loc 1 196 3 view .LVU72
 196:Src/main.c    ****   TIM_IC_InitTypeDef sConfigIC = {0};
 319              		.loc 1 196 27 is_stmt 0 view .LVU73
 320 0004 0023     		movs	r3, #0
 321 0006 0593     		str	r3, [sp, #20]
 322 0008 0693     		str	r3, [sp, #24]
 323 000a 0793     		str	r3, [sp, #28]
 197:Src/main.c    **** 
 324              		.loc 1 197 3 is_stmt 1 view .LVU74
 197:Src/main.c    **** 
 325              		.loc 1 197 22 is_stmt 0 view .LVU75
 326 000c 0193     		str	r3, [sp, #4]
 327 000e 0293     		str	r3, [sp, #8]
 328 0010 0393     		str	r3, [sp, #12]
 329 0012 0493     		str	r3, [sp, #16]
 202:Src/main.c    ****   htim1.Init.Prescaler = 32-1;
 330              		.loc 1 202 3 is_stmt 1 view .LVU76
 202:Src/main.c    ****   htim1.Init.Prescaler = 32-1;
 331              		.loc 1 202 18 is_stmt 0 view .LVU77
 332 0014 1648     		ldr	r0, .L23
 333 0016 174A     		ldr	r2, .L23+4
 334 0018 0260     		str	r2, [r0]
 203:Src/main.c    ****   htim1.Init.CounterMode = TIM_COUNTERMODE_UP;
 335              		.loc 1 203 3 is_stmt 1 view .LVU78
 203:Src/main.c    ****   htim1.Init.CounterMode = TIM_COUNTERMODE_UP;
 336              		.loc 1 203 24 is_stmt 0 view .LVU79
 337 001a 1F22     		movs	r2, #31
 338 001c 4260     		str	r2, [r0, #4]
 204:Src/main.c    ****   htim1.Init.Period = 50000;
 339              		.loc 1 204 3 is_stmt 1 view .LVU80
 204:Src/main.c    ****   htim1.Init.Period = 50000;
 340              		.loc 1 204 26 is_stmt 0 view .LVU81
 341 001e 8360     		str	r3, [r0, #8]
 205:Src/main.c    ****   htim1.Init.ClockDivision = TIM_CLOCKDIVISION_DIV1;
ARM GAS  /tmp/ccUAoPyn.s 			page 18


 342              		.loc 1 205 3 is_stmt 1 view .LVU82
 205:Src/main.c    ****   htim1.Init.ClockDivision = TIM_CLOCKDIVISION_DIV1;
 343              		.loc 1 205 21 is_stmt 0 view .LVU83
 344 0020 4CF25032 		movw	r2, #50000
 345 0024 C260     		str	r2, [r0, #12]
 206:Src/main.c    ****   htim1.Init.RepetitionCounter = 0;
 346              		.loc 1 206 3 is_stmt 1 view .LVU84
 206:Src/main.c    ****   htim1.Init.RepetitionCounter = 0;
 347              		.loc 1 206 28 is_stmt 0 view .LVU85
 348 0026 0361     		str	r3, [r0, #16]
 207:Src/main.c    ****   htim1.Init.AutoReloadPreload = TIM_AUTORELOAD_PRELOAD_DISABLE;
 349              		.loc 1 207 3 is_stmt 1 view .LVU86
 207:Src/main.c    ****   htim1.Init.AutoReloadPreload = TIM_AUTORELOAD_PRELOAD_DISABLE;
 350              		.loc 1 207 32 is_stmt 0 view .LVU87
 351 0028 4361     		str	r3, [r0, #20]
 208:Src/main.c    ****   if (HAL_TIM_IC_Init(&htim1) != HAL_OK)
 352              		.loc 1 208 3 is_stmt 1 view .LVU88
 208:Src/main.c    ****   if (HAL_TIM_IC_Init(&htim1) != HAL_OK)
 353              		.loc 1 208 32 is_stmt 0 view .LVU89
 354 002a 8361     		str	r3, [r0, #24]
 209:Src/main.c    ****   {
 355              		.loc 1 209 3 is_stmt 1 view .LVU90
 209:Src/main.c    ****   {
 356              		.loc 1 209 7 is_stmt 0 view .LVU91
 357 002c FFF7FEFF 		bl	HAL_TIM_IC_Init
 358              	.LVL3:
 209:Src/main.c    ****   {
 359              		.loc 1 209 6 view .LVU92
 360 0030 B8B9     		cbnz	r0, .L20
 213:Src/main.c    ****   sMasterConfig.MasterOutputTrigger2 = TIM_TRGO2_RESET;
 361              		.loc 1 213 3 is_stmt 1 view .LVU93
 213:Src/main.c    ****   sMasterConfig.MasterOutputTrigger2 = TIM_TRGO2_RESET;
 362              		.loc 1 213 37 is_stmt 0 view .LVU94
 363 0032 0023     		movs	r3, #0
 364 0034 0593     		str	r3, [sp, #20]
 214:Src/main.c    ****   sMasterConfig.MasterSlaveMode = TIM_MASTERSLAVEMODE_DISABLE;
 365              		.loc 1 214 3 is_stmt 1 view .LVU95
 214:Src/main.c    ****   sMasterConfig.MasterSlaveMode = TIM_MASTERSLAVEMODE_DISABLE;
 366              		.loc 1 214 38 is_stmt 0 view .LVU96
 367 0036 0693     		str	r3, [sp, #24]
 215:Src/main.c    ****   if (HAL_TIMEx_MasterConfigSynchronization(&htim1, &sMasterConfig) != HAL_OK)
 368              		.loc 1 215 3 is_stmt 1 view .LVU97
 215:Src/main.c    ****   if (HAL_TIMEx_MasterConfigSynchronization(&htim1, &sMasterConfig) != HAL_OK)
 369              		.loc 1 215 33 is_stmt 0 view .LVU98
 370 0038 0793     		str	r3, [sp, #28]
 216:Src/main.c    ****   {
 371              		.loc 1 216 3 is_stmt 1 view .LVU99
 216:Src/main.c    ****   {
 372              		.loc 1 216 7 is_stmt 0 view .LVU100
 373 003a 05A9     		add	r1, sp, #20
 374 003c 0C48     		ldr	r0, .L23
 375 003e FFF7FEFF 		bl	HAL_TIMEx_MasterConfigSynchronization
 376              	.LVL4:
 216:Src/main.c    ****   {
 377              		.loc 1 216 6 view .LVU101
 378 0042 80B9     		cbnz	r0, .L21
 220:Src/main.c    ****   sConfigIC.ICSelection = TIM_ICSELECTION_DIRECTTI;
ARM GAS  /tmp/ccUAoPyn.s 			page 19


 379              		.loc 1 220 3 is_stmt 1 view .LVU102
 220:Src/main.c    ****   sConfigIC.ICSelection = TIM_ICSELECTION_DIRECTTI;
 380              		.loc 1 220 24 is_stmt 0 view .LVU103
 381 0044 0A23     		movs	r3, #10
 382 0046 0193     		str	r3, [sp, #4]
 221:Src/main.c    ****   sConfigIC.ICPrescaler = TIM_ICPSC_DIV1;
 383              		.loc 1 221 3 is_stmt 1 view .LVU104
 221:Src/main.c    ****   sConfigIC.ICPrescaler = TIM_ICPSC_DIV1;
 384              		.loc 1 221 25 is_stmt 0 view .LVU105
 385 0048 0123     		movs	r3, #1
 386 004a 0293     		str	r3, [sp, #8]
 222:Src/main.c    ****   sConfigIC.ICFilter = 0;
 387              		.loc 1 222 3 is_stmt 1 view .LVU106
 222:Src/main.c    ****   sConfigIC.ICFilter = 0;
 388              		.loc 1 222 25 is_stmt 0 view .LVU107
 389 004c 0022     		movs	r2, #0
 390 004e 0392     		str	r2, [sp, #12]
 223:Src/main.c    ****   if (HAL_TIM_IC_ConfigChannel(&htim1, &sConfigIC, TIM_CHANNEL_1) != HAL_OK)
 391              		.loc 1 223 3 is_stmt 1 view .LVU108
 223:Src/main.c    ****   if (HAL_TIM_IC_ConfigChannel(&htim1, &sConfigIC, TIM_CHANNEL_1) != HAL_OK)
 392              		.loc 1 223 22 is_stmt 0 view .LVU109
 393 0050 0492     		str	r2, [sp, #16]
 224:Src/main.c    ****   {
 394              		.loc 1 224 3 is_stmt 1 view .LVU110
 224:Src/main.c    ****   {
 395              		.loc 1 224 7 is_stmt 0 view .LVU111
 396 0052 01A9     		add	r1, sp, #4
 397 0054 0648     		ldr	r0, .L23
 398 0056 FFF7FEFF 		bl	HAL_TIM_IC_ConfigChannel
 399              	.LVL5:
 224:Src/main.c    ****   {
 400              		.loc 1 224 6 view .LVU112
 401 005a 30B9     		cbnz	r0, .L22
 232:Src/main.c    **** 
 402              		.loc 1 232 1 view .LVU113
 403 005c 09B0     		add	sp, sp, #36
 404              	.LCFI5:
 405              		.cfi_remember_state
 406              		.cfi_def_cfa_offset 4
 407              		@ sp needed
 408 005e 5DF804FB 		ldr	pc, [sp], #4
 409              	.L20:
 410              	.LCFI6:
 411              		.cfi_restore_state
 211:Src/main.c    ****   }
 412              		.loc 1 211 5 is_stmt 1 view .LVU114
 413 0062 FFF7FEFF 		bl	Error_Handler
 414              	.LVL6:
 415              	.L21:
 218:Src/main.c    ****   }
 416              		.loc 1 218 5 view .LVU115
 417 0066 FFF7FEFF 		bl	Error_Handler
 418              	.LVL7:
 419              	.L22:
 226:Src/main.c    ****   }
 420              		.loc 1 226 5 view .LVU116
 421 006a FFF7FEFF 		bl	Error_Handler
ARM GAS  /tmp/ccUAoPyn.s 			page 20


 422              	.LVL8:
 423              	.L24:
 424 006e 00BF     		.align	2
 425              	.L23:
 426 0070 00000000 		.word	htim1
 427 0074 002C0140 		.word	1073818624
 428              		.cfi_endproc
 429              	.LFE137:
 431              		.section	.text.MX_USART2_UART_Init,"ax",%progbits
 432              		.align	1
 433              		.syntax unified
 434              		.thumb
 435              		.thumb_func
 436              		.fpu fpv4-sp-d16
 438              	MX_USART2_UART_Init:
 439              	.LFB139:
 302:Src/main.c    **** 
 440              		.loc 1 302 1 view -0
 441              		.cfi_startproc
 442              		@ args = 0, pretend = 0, frame = 0
 443              		@ frame_needed = 0, uses_anonymous_args = 0
 444 0000 08B5     		push	{r3, lr}
 445              	.LCFI7:
 446              		.cfi_def_cfa_offset 8
 447              		.cfi_offset 3, -8
 448              		.cfi_offset 14, -4
 311:Src/main.c    ****   huart2.Init.BaudRate = 115200;
 449              		.loc 1 311 3 view .LVU118
 311:Src/main.c    ****   huart2.Init.BaudRate = 115200;
 450              		.loc 1 311 19 is_stmt 0 view .LVU119
 451 0002 0B48     		ldr	r0, .L29
 452 0004 0B4B     		ldr	r3, .L29+4
 453 0006 0360     		str	r3, [r0]
 312:Src/main.c    ****   huart2.Init.WordLength = UART_WORDLENGTH_8B;
 454              		.loc 1 312 3 is_stmt 1 view .LVU120
 312:Src/main.c    ****   huart2.Init.WordLength = UART_WORDLENGTH_8B;
 455              		.loc 1 312 24 is_stmt 0 view .LVU121
 456 0008 4FF4E133 		mov	r3, #115200
 457 000c 4360     		str	r3, [r0, #4]
 313:Src/main.c    ****   huart2.Init.StopBits = UART_STOPBITS_1;
 458              		.loc 1 313 3 is_stmt 1 view .LVU122
 313:Src/main.c    ****   huart2.Init.StopBits = UART_STOPBITS_1;
 459              		.loc 1 313 26 is_stmt 0 view .LVU123
 460 000e 0023     		movs	r3, #0
 461 0010 8360     		str	r3, [r0, #8]
 314:Src/main.c    ****   huart2.Init.Parity = UART_PARITY_NONE;
 462              		.loc 1 314 3 is_stmt 1 view .LVU124
 314:Src/main.c    ****   huart2.Init.Parity = UART_PARITY_NONE;
 463              		.loc 1 314 24 is_stmt 0 view .LVU125
 464 0012 C360     		str	r3, [r0, #12]
 315:Src/main.c    ****   huart2.Init.Mode = UART_MODE_TX_RX;
 465              		.loc 1 315 3 is_stmt 1 view .LVU126
 315:Src/main.c    ****   huart2.Init.Mode = UART_MODE_TX_RX;
 466              		.loc 1 315 22 is_stmt 0 view .LVU127
 467 0014 0361     		str	r3, [r0, #16]
 316:Src/main.c    ****   huart2.Init.HwFlowCtl = UART_HWCONTROL_NONE;
 468              		.loc 1 316 3 is_stmt 1 view .LVU128
ARM GAS  /tmp/ccUAoPyn.s 			page 21


 316:Src/main.c    ****   huart2.Init.HwFlowCtl = UART_HWCONTROL_NONE;
 469              		.loc 1 316 20 is_stmt 0 view .LVU129
 470 0016 0C22     		movs	r2, #12
 471 0018 4261     		str	r2, [r0, #20]
 317:Src/main.c    ****   huart2.Init.OverSampling = UART_OVERSAMPLING_16;
 472              		.loc 1 317 3 is_stmt 1 view .LVU130
 317:Src/main.c    ****   huart2.Init.OverSampling = UART_OVERSAMPLING_16;
 473              		.loc 1 317 25 is_stmt 0 view .LVU131
 474 001a 8361     		str	r3, [r0, #24]
 318:Src/main.c    ****   huart2.Init.OneBitSampling = UART_ONE_BIT_SAMPLE_DISABLE;
 475              		.loc 1 318 3 is_stmt 1 view .LVU132
 318:Src/main.c    ****   huart2.Init.OneBitSampling = UART_ONE_BIT_SAMPLE_DISABLE;
 476              		.loc 1 318 28 is_stmt 0 view .LVU133
 477 001c C361     		str	r3, [r0, #28]
 319:Src/main.c    ****   huart2.AdvancedInit.AdvFeatureInit = UART_ADVFEATURE_NO_INIT;
 478              		.loc 1 319 3 is_stmt 1 view .LVU134
 319:Src/main.c    ****   huart2.AdvancedInit.AdvFeatureInit = UART_ADVFEATURE_NO_INIT;
 479              		.loc 1 319 30 is_stmt 0 view .LVU135
 480 001e 0362     		str	r3, [r0, #32]
 320:Src/main.c    ****   if (HAL_UART_Init(&huart2) != HAL_OK)
 481              		.loc 1 320 3 is_stmt 1 view .LVU136
 320:Src/main.c    ****   if (HAL_UART_Init(&huart2) != HAL_OK)
 482              		.loc 1 320 38 is_stmt 0 view .LVU137
 483 0020 4362     		str	r3, [r0, #36]
 321:Src/main.c    ****   {
 484              		.loc 1 321 3 is_stmt 1 view .LVU138
 321:Src/main.c    ****   {
 485              		.loc 1 321 7 is_stmt 0 view .LVU139
 486 0022 FFF7FEFF 		bl	HAL_UART_Init
 487              	.LVL9:
 321:Src/main.c    ****   {
 488              		.loc 1 321 6 view .LVU140
 489 0026 00B9     		cbnz	r0, .L28
 329:Src/main.c    **** 
 490              		.loc 1 329 1 view .LVU141
 491 0028 08BD     		pop	{r3, pc}
 492              	.L28:
 323:Src/main.c    ****   }
 493              		.loc 1 323 5 is_stmt 1 view .LVU142
 494 002a FFF7FEFF 		bl	Error_Handler
 495              	.LVL10:
 496              	.L30:
 497 002e 00BF     		.align	2
 498              	.L29:
 499 0030 00000000 		.word	huart2
 500 0034 00440040 		.word	1073759232
 501              		.cfi_endproc
 502              	.LFE139:
 504              		.section	.text.MX_TIM16_Init,"ax",%progbits
 505              		.align	1
 506              		.syntax unified
 507              		.thumb
 508              		.thumb_func
 509              		.fpu fpv4-sp-d16
 511              	MX_TIM16_Init:
 512              	.LFB138:
 240:Src/main.c    **** 
ARM GAS  /tmp/ccUAoPyn.s 			page 22


 513              		.loc 1 240 1 view -0
 514              		.cfi_startproc
 515              		@ args = 0, pretend = 0, frame = 72
 516              		@ frame_needed = 0, uses_anonymous_args = 0
 517 0000 10B5     		push	{r4, lr}
 518              	.LCFI8:
 519              		.cfi_def_cfa_offset 8
 520              		.cfi_offset 4, -8
 521              		.cfi_offset 14, -4
 522 0002 92B0     		sub	sp, sp, #72
 523              	.LCFI9:
 524              		.cfi_def_cfa_offset 80
 246:Src/main.c    ****   TIM_BreakDeadTimeConfigTypeDef sBreakDeadTimeConfig = {0};
 525              		.loc 1 246 3 view .LVU144
 246:Src/main.c    ****   TIM_BreakDeadTimeConfigTypeDef sBreakDeadTimeConfig = {0};
 526              		.loc 1 246 22 is_stmt 0 view .LVU145
 527 0004 0024     		movs	r4, #0
 528 0006 0B94     		str	r4, [sp, #44]
 529 0008 0C94     		str	r4, [sp, #48]
 530 000a 0D94     		str	r4, [sp, #52]
 531 000c 0E94     		str	r4, [sp, #56]
 532 000e 0F94     		str	r4, [sp, #60]
 533 0010 1094     		str	r4, [sp, #64]
 534 0012 1194     		str	r4, [sp, #68]
 247:Src/main.c    **** 
 535              		.loc 1 247 3 is_stmt 1 view .LVU146
 247:Src/main.c    **** 
 536              		.loc 1 247 34 is_stmt 0 view .LVU147
 537 0014 2C22     		movs	r2, #44
 538 0016 2146     		mov	r1, r4
 539 0018 6846     		mov	r0, sp
 540 001a FFF7FEFF 		bl	memset
 541              	.LVL11:
 252:Src/main.c    ****   htim16.Init.Prescaler = 32-1;
 542              		.loc 1 252 3 is_stmt 1 view .LVU148
 252:Src/main.c    ****   htim16.Init.Prescaler = 32-1;
 543              		.loc 1 252 19 is_stmt 0 view .LVU149
 544 001e 1E48     		ldr	r0, .L41
 545 0020 1E4B     		ldr	r3, .L41+4
 546 0022 0360     		str	r3, [r0]
 253:Src/main.c    ****   htim16.Init.CounterMode = TIM_COUNTERMODE_UP;
 547              		.loc 1 253 3 is_stmt 1 view .LVU150
 253:Src/main.c    ****   htim16.Init.CounterMode = TIM_COUNTERMODE_UP;
 548              		.loc 1 253 25 is_stmt 0 view .LVU151
 549 0024 1F23     		movs	r3, #31
 550 0026 4360     		str	r3, [r0, #4]
 254:Src/main.c    ****   htim16.Init.Period = 65535;
 551              		.loc 1 254 3 is_stmt 1 view .LVU152
 254:Src/main.c    ****   htim16.Init.Period = 65535;
 552              		.loc 1 254 27 is_stmt 0 view .LVU153
 553 0028 8460     		str	r4, [r0, #8]
 255:Src/main.c    ****   htim16.Init.ClockDivision = TIM_CLOCKDIVISION_DIV1;
 554              		.loc 1 255 3 is_stmt 1 view .LVU154
 255:Src/main.c    ****   htim16.Init.ClockDivision = TIM_CLOCKDIVISION_DIV1;
 555              		.loc 1 255 22 is_stmt 0 view .LVU155
 556 002a 4FF6FF73 		movw	r3, #65535
 557 002e C360     		str	r3, [r0, #12]
ARM GAS  /tmp/ccUAoPyn.s 			page 23


 256:Src/main.c    ****   htim16.Init.RepetitionCounter = 0;
 558              		.loc 1 256 3 is_stmt 1 view .LVU156
 256:Src/main.c    ****   htim16.Init.RepetitionCounter = 0;
 559              		.loc 1 256 29 is_stmt 0 view .LVU157
 560 0030 0461     		str	r4, [r0, #16]
 257:Src/main.c    ****   htim16.Init.AutoReloadPreload = TIM_AUTORELOAD_PRELOAD_DISABLE;
 561              		.loc 1 257 3 is_stmt 1 view .LVU158
 257:Src/main.c    ****   htim16.Init.AutoReloadPreload = TIM_AUTORELOAD_PRELOAD_DISABLE;
 562              		.loc 1 257 33 is_stmt 0 view .LVU159
 563 0032 4461     		str	r4, [r0, #20]
 258:Src/main.c    ****   if (HAL_TIM_Base_Init(&htim16) != HAL_OK)
 564              		.loc 1 258 3 is_stmt 1 view .LVU160
 258:Src/main.c    ****   if (HAL_TIM_Base_Init(&htim16) != HAL_OK)
 565              		.loc 1 258 33 is_stmt 0 view .LVU161
 566 0034 8461     		str	r4, [r0, #24]
 259:Src/main.c    ****   {
 567              		.loc 1 259 3 is_stmt 1 view .LVU162
 259:Src/main.c    ****   {
 568              		.loc 1 259 7 is_stmt 0 view .LVU163
 569 0036 FFF7FEFF 		bl	HAL_TIM_Base_Init
 570              	.LVL12:
 259:Src/main.c    ****   {
 571              		.loc 1 259 6 view .LVU164
 572 003a 28BB     		cbnz	r0, .L37
 263:Src/main.c    ****   {
 573              		.loc 1 263 3 is_stmt 1 view .LVU165
 263:Src/main.c    ****   {
 574              		.loc 1 263 7 is_stmt 0 view .LVU166
 575 003c 1648     		ldr	r0, .L41
 576 003e FFF7FEFF 		bl	HAL_TIM_PWM_Init
 577              	.LVL13:
 263:Src/main.c    ****   {
 578              		.loc 1 263 6 view .LVU167
 579 0042 18BB     		cbnz	r0, .L38
 267:Src/main.c    ****   sConfigOC.Pulse = 0;
 580              		.loc 1 267 3 is_stmt 1 view .LVU168
 267:Src/main.c    ****   sConfigOC.Pulse = 0;
 581              		.loc 1 267 20 is_stmt 0 view .LVU169
 582 0044 7023     		movs	r3, #112
 583 0046 0B93     		str	r3, [sp, #44]
 268:Src/main.c    ****   sConfigOC.OCPolarity = TIM_OCPOLARITY_HIGH;
 584              		.loc 1 268 3 is_stmt 1 view .LVU170
 268:Src/main.c    ****   sConfigOC.OCPolarity = TIM_OCPOLARITY_HIGH;
 585              		.loc 1 268 19 is_stmt 0 view .LVU171
 586 0048 0022     		movs	r2, #0
 587 004a 0C92     		str	r2, [sp, #48]
 269:Src/main.c    ****   sConfigOC.OCNPolarity = TIM_OCNPOLARITY_HIGH;
 588              		.loc 1 269 3 is_stmt 1 view .LVU172
 269:Src/main.c    ****   sConfigOC.OCNPolarity = TIM_OCNPOLARITY_HIGH;
 589              		.loc 1 269 24 is_stmt 0 view .LVU173
 590 004c 0D92     		str	r2, [sp, #52]
 270:Src/main.c    ****   sConfigOC.OCFastMode = TIM_OCFAST_DISABLE;
 591              		.loc 1 270 3 is_stmt 1 view .LVU174
 270:Src/main.c    ****   sConfigOC.OCFastMode = TIM_OCFAST_DISABLE;
 592              		.loc 1 270 25 is_stmt 0 view .LVU175
 593 004e 0E92     		str	r2, [sp, #56]
 271:Src/main.c    ****   sConfigOC.OCIdleState = TIM_OCIDLESTATE_RESET;
ARM GAS  /tmp/ccUAoPyn.s 			page 24


 594              		.loc 1 271 3 is_stmt 1 view .LVU176
 271:Src/main.c    ****   sConfigOC.OCIdleState = TIM_OCIDLESTATE_RESET;
 595              		.loc 1 271 24 is_stmt 0 view .LVU177
 596 0050 0F92     		str	r2, [sp, #60]
 272:Src/main.c    ****   sConfigOC.OCNIdleState = TIM_OCNIDLESTATE_RESET;
 597              		.loc 1 272 3 is_stmt 1 view .LVU178
 272:Src/main.c    ****   sConfigOC.OCNIdleState = TIM_OCNIDLESTATE_RESET;
 598              		.loc 1 272 25 is_stmt 0 view .LVU179
 599 0052 1092     		str	r2, [sp, #64]
 273:Src/main.c    ****   if (HAL_TIM_PWM_ConfigChannel(&htim16, &sConfigOC, TIM_CHANNEL_1) != HAL_OK)
 600              		.loc 1 273 3 is_stmt 1 view .LVU180
 273:Src/main.c    ****   if (HAL_TIM_PWM_ConfigChannel(&htim16, &sConfigOC, TIM_CHANNEL_1) != HAL_OK)
 601              		.loc 1 273 26 is_stmt 0 view .LVU181
 602 0054 1192     		str	r2, [sp, #68]
 274:Src/main.c    ****   {
 603              		.loc 1 274 3 is_stmt 1 view .LVU182
 274:Src/main.c    ****   {
 604              		.loc 1 274 7 is_stmt 0 view .LVU183
 605 0056 0BA9     		add	r1, sp, #44
 606 0058 0F48     		ldr	r0, .L41
 607 005a FFF7FEFF 		bl	HAL_TIM_PWM_ConfigChannel
 608              	.LVL14:
 274:Src/main.c    ****   {
 609              		.loc 1 274 6 view .LVU184
 610 005e B8B9     		cbnz	r0, .L39
 278:Src/main.c    ****   sBreakDeadTimeConfig.OffStateIDLEMode = TIM_OSSI_DISABLE;
 611              		.loc 1 278 3 is_stmt 1 view .LVU185
 278:Src/main.c    ****   sBreakDeadTimeConfig.OffStateIDLEMode = TIM_OSSI_DISABLE;
 612              		.loc 1 278 40 is_stmt 0 view .LVU186
 613 0060 0023     		movs	r3, #0
 614 0062 0093     		str	r3, [sp]
 279:Src/main.c    ****   sBreakDeadTimeConfig.LockLevel = TIM_LOCKLEVEL_OFF;
 615              		.loc 1 279 3 is_stmt 1 view .LVU187
 279:Src/main.c    ****   sBreakDeadTimeConfig.LockLevel = TIM_LOCKLEVEL_OFF;
 616              		.loc 1 279 41 is_stmt 0 view .LVU188
 617 0064 0193     		str	r3, [sp, #4]
 280:Src/main.c    ****   sBreakDeadTimeConfig.DeadTime = 0;
 618              		.loc 1 280 3 is_stmt 1 view .LVU189
 280:Src/main.c    ****   sBreakDeadTimeConfig.DeadTime = 0;
 619              		.loc 1 280 34 is_stmt 0 view .LVU190
 620 0066 0293     		str	r3, [sp, #8]
 281:Src/main.c    ****   sBreakDeadTimeConfig.BreakState = TIM_BREAK_DISABLE;
 621              		.loc 1 281 3 is_stmt 1 view .LVU191
 281:Src/main.c    ****   sBreakDeadTimeConfig.BreakState = TIM_BREAK_DISABLE;
 622              		.loc 1 281 33 is_stmt 0 view .LVU192
 623 0068 0393     		str	r3, [sp, #12]
 282:Src/main.c    ****   sBreakDeadTimeConfig.BreakPolarity = TIM_BREAKPOLARITY_HIGH;
 624              		.loc 1 282 3 is_stmt 1 view .LVU193
 282:Src/main.c    ****   sBreakDeadTimeConfig.BreakPolarity = TIM_BREAKPOLARITY_HIGH;
 625              		.loc 1 282 35 is_stmt 0 view .LVU194
 626 006a 0493     		str	r3, [sp, #16]
 283:Src/main.c    ****   sBreakDeadTimeConfig.AutomaticOutput = TIM_AUTOMATICOUTPUT_DISABLE;
 627              		.loc 1 283 3 is_stmt 1 view .LVU195
 283:Src/main.c    ****   sBreakDeadTimeConfig.AutomaticOutput = TIM_AUTOMATICOUTPUT_DISABLE;
 628              		.loc 1 283 38 is_stmt 0 view .LVU196
 629 006c 4FF40052 		mov	r2, #8192
 630 0070 0592     		str	r2, [sp, #20]
ARM GAS  /tmp/ccUAoPyn.s 			page 25


 284:Src/main.c    ****   if (HAL_TIMEx_ConfigBreakDeadTime(&htim16, &sBreakDeadTimeConfig) != HAL_OK)
 631              		.loc 1 284 3 is_stmt 1 view .LVU197
 284:Src/main.c    ****   if (HAL_TIMEx_ConfigBreakDeadTime(&htim16, &sBreakDeadTimeConfig) != HAL_OK)
 632              		.loc 1 284 40 is_stmt 0 view .LVU198
 633 0072 0A93     		str	r3, [sp, #40]
 285:Src/main.c    ****   {
 634              		.loc 1 285 3 is_stmt 1 view .LVU199
 285:Src/main.c    ****   {
 635              		.loc 1 285 7 is_stmt 0 view .LVU200
 636 0074 6946     		mov	r1, sp
 637 0076 0848     		ldr	r0, .L41
 638 0078 FFF7FEFF 		bl	HAL_TIMEx_ConfigBreakDeadTime
 639              	.LVL15:
 285:Src/main.c    ****   {
 640              		.loc 1 285 6 view .LVU201
 641 007c 50B9     		cbnz	r0, .L40
 292:Src/main.c    **** 
 642              		.loc 1 292 3 is_stmt 1 view .LVU202
 643 007e 0648     		ldr	r0, .L41
 644 0080 FFF7FEFF 		bl	HAL_TIM_MspPostInit
 645              	.LVL16:
 294:Src/main.c    **** 
 646              		.loc 1 294 1 is_stmt 0 view .LVU203
 647 0084 12B0     		add	sp, sp, #72
 648              	.LCFI10:
 649              		.cfi_remember_state
 650              		.cfi_def_cfa_offset 8
 651              		@ sp needed
 652 0086 10BD     		pop	{r4, pc}
 653              	.L37:
 654              	.LCFI11:
 655              		.cfi_restore_state
 261:Src/main.c    ****   }
 656              		.loc 1 261 5 is_stmt 1 view .LVU204
 657 0088 FFF7FEFF 		bl	Error_Handler
 658              	.LVL17:
 659              	.L38:
 265:Src/main.c    ****   }
 660              		.loc 1 265 5 view .LVU205
 661 008c FFF7FEFF 		bl	Error_Handler
 662              	.LVL18:
 663              	.L39:
 276:Src/main.c    ****   }
 664              		.loc 1 276 5 view .LVU206
 665 0090 FFF7FEFF 		bl	Error_Handler
 666              	.LVL19:
 667              	.L40:
 287:Src/main.c    ****   }
 668              		.loc 1 287 5 view .LVU207
 669 0094 FFF7FEFF 		bl	Error_Handler
 670              	.LVL20:
 671              	.L42:
 672              		.align	2
 673              	.L41:
 674 0098 00000000 		.word	htim16
 675 009c 00440140 		.word	1073824768
 676              		.cfi_endproc
ARM GAS  /tmp/ccUAoPyn.s 			page 26


 677              	.LFE138:
 679              		.section	.text.SystemClock_Config,"ax",%progbits
 680              		.align	1
 681              		.global	SystemClock_Config
 682              		.syntax unified
 683              		.thumb
 684              		.thumb_func
 685              		.fpu fpv4-sp-d16
 687              	SystemClock_Config:
 688              	.LFB136:
 133:Src/main.c    ****   RCC_OscInitTypeDef RCC_OscInitStruct = {0};
 689              		.loc 1 133 1 view -0
 690              		.cfi_startproc
 691              		@ args = 0, pretend = 0, frame = 88
 692              		@ frame_needed = 0, uses_anonymous_args = 0
 693 0000 00B5     		push	{lr}
 694              	.LCFI12:
 695              		.cfi_def_cfa_offset 4
 696              		.cfi_offset 14, -4
 697 0002 97B0     		sub	sp, sp, #92
 698              	.LCFI13:
 699              		.cfi_def_cfa_offset 96
 134:Src/main.c    ****   RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};
 700              		.loc 1 134 3 view .LVU209
 134:Src/main.c    ****   RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};
 701              		.loc 1 134 22 is_stmt 0 view .LVU210
 702 0004 4422     		movs	r2, #68
 703 0006 0021     		movs	r1, #0
 704 0008 05A8     		add	r0, sp, #20
 705 000a FFF7FEFF 		bl	memset
 706              	.LVL21:
 135:Src/main.c    **** 
 707              		.loc 1 135 3 is_stmt 1 view .LVU211
 135:Src/main.c    **** 
 708              		.loc 1 135 22 is_stmt 0 view .LVU212
 709 000e 0023     		movs	r3, #0
 710 0010 0093     		str	r3, [sp]
 711 0012 0193     		str	r3, [sp, #4]
 712 0014 0293     		str	r3, [sp, #8]
 713 0016 0393     		str	r3, [sp, #12]
 714 0018 0493     		str	r3, [sp, #16]
 139:Src/main.c    ****   {
 715              		.loc 1 139 3 is_stmt 1 view .LVU213
 139:Src/main.c    ****   {
 716              		.loc 1 139 7 is_stmt 0 view .LVU214
 717 001a 4FF40070 		mov	r0, #512
 718 001e FFF7FEFF 		bl	HAL_PWREx_ControlVoltageScaling
 719              	.LVL22:
 139:Src/main.c    ****   {
 720              		.loc 1 139 6 view .LVU215
 721 0022 0028     		cmp	r0, #0
 722 0024 31D1     		bne	.L48
 145:Src/main.c    ****   __HAL_RCC_LSEDRIVE_CONFIG(RCC_LSEDRIVE_LOW);
 723              		.loc 1 145 3 is_stmt 1 view .LVU216
 724 0026 FFF7FEFF 		bl	HAL_PWR_EnableBkUpAccess
 725              	.LVL23:
 146:Src/main.c    ****   /** Initializes the RCC Oscillators according to the specified parameters
ARM GAS  /tmp/ccUAoPyn.s 			page 27


 726              		.loc 1 146 3 view .LVU217
 727 002a 1B4A     		ldr	r2, .L51
 728 002c D2F89030 		ldr	r3, [r2, #144]
 729 0030 23F01803 		bic	r3, r3, #24
 730 0034 C2F89030 		str	r3, [r2, #144]
 150:Src/main.c    ****   RCC_OscInitStruct.LSEState = RCC_LSE_ON;
 731              		.loc 1 150 3 view .LVU218
 150:Src/main.c    ****   RCC_OscInitStruct.LSEState = RCC_LSE_ON;
 732              		.loc 1 150 36 is_stmt 0 view .LVU219
 733 0038 1423     		movs	r3, #20
 734 003a 0593     		str	r3, [sp, #20]
 151:Src/main.c    ****   RCC_OscInitStruct.MSIState = RCC_MSI_ON;
 735              		.loc 1 151 3 is_stmt 1 view .LVU220
 151:Src/main.c    ****   RCC_OscInitStruct.MSIState = RCC_MSI_ON;
 736              		.loc 1 151 30 is_stmt 0 view .LVU221
 737 003c 0123     		movs	r3, #1
 738 003e 0793     		str	r3, [sp, #28]
 152:Src/main.c    ****   RCC_OscInitStruct.MSICalibrationValue = 0;
 739              		.loc 1 152 3 is_stmt 1 view .LVU222
 152:Src/main.c    ****   RCC_OscInitStruct.MSICalibrationValue = 0;
 740              		.loc 1 152 30 is_stmt 0 view .LVU223
 741 0040 0B93     		str	r3, [sp, #44]
 153:Src/main.c    ****   RCC_OscInitStruct.MSIClockRange = RCC_MSIRANGE_6;
 742              		.loc 1 153 3 is_stmt 1 view .LVU224
 153:Src/main.c    ****   RCC_OscInitStruct.MSIClockRange = RCC_MSIRANGE_6;
 743              		.loc 1 153 41 is_stmt 0 view .LVU225
 744 0042 0022     		movs	r2, #0
 745 0044 0C92     		str	r2, [sp, #48]
 154:Src/main.c    ****   RCC_OscInitStruct.PLL.PLLState = RCC_PLL_ON;
 746              		.loc 1 154 3 is_stmt 1 view .LVU226
 154:Src/main.c    ****   RCC_OscInitStruct.PLL.PLLState = RCC_PLL_ON;
 747              		.loc 1 154 35 is_stmt 0 view .LVU227
 748 0046 6022     		movs	r2, #96
 749 0048 0D92     		str	r2, [sp, #52]
 155:Src/main.c    ****   RCC_OscInitStruct.PLL.PLLSource = RCC_PLLSOURCE_MSI;
 750              		.loc 1 155 3 is_stmt 1 view .LVU228
 155:Src/main.c    ****   RCC_OscInitStruct.PLL.PLLSource = RCC_PLLSOURCE_MSI;
 751              		.loc 1 155 34 is_stmt 0 view .LVU229
 752 004a 0222     		movs	r2, #2
 753 004c 0F92     		str	r2, [sp, #60]
 156:Src/main.c    ****   RCC_OscInitStruct.PLL.PLLM = 1;
 754              		.loc 1 156 3 is_stmt 1 view .LVU230
 156:Src/main.c    ****   RCC_OscInitStruct.PLL.PLLM = 1;
 755              		.loc 1 156 35 is_stmt 0 view .LVU231
 756 004e 1093     		str	r3, [sp, #64]
 157:Src/main.c    ****   RCC_OscInitStruct.PLL.PLLN = 16;
 757              		.loc 1 157 3 is_stmt 1 view .LVU232
 157:Src/main.c    ****   RCC_OscInitStruct.PLL.PLLN = 16;
 758              		.loc 1 157 30 is_stmt 0 view .LVU233
 759 0050 1193     		str	r3, [sp, #68]
 158:Src/main.c    ****   RCC_OscInitStruct.PLL.PLLP = RCC_PLLP_DIV7;
 760              		.loc 1 158 3 is_stmt 1 view .LVU234
 158:Src/main.c    ****   RCC_OscInitStruct.PLL.PLLP = RCC_PLLP_DIV7;
 761              		.loc 1 158 30 is_stmt 0 view .LVU235
 762 0052 1023     		movs	r3, #16
 763 0054 1293     		str	r3, [sp, #72]
 159:Src/main.c    ****   RCC_OscInitStruct.PLL.PLLQ = RCC_PLLQ_DIV2;
ARM GAS  /tmp/ccUAoPyn.s 			page 28


 764              		.loc 1 159 3 is_stmt 1 view .LVU236
 159:Src/main.c    ****   RCC_OscInitStruct.PLL.PLLQ = RCC_PLLQ_DIV2;
 765              		.loc 1 159 30 is_stmt 0 view .LVU237
 766 0056 0723     		movs	r3, #7
 767 0058 1393     		str	r3, [sp, #76]
 160:Src/main.c    ****   RCC_OscInitStruct.PLL.PLLR = RCC_PLLR_DIV2;
 768              		.loc 1 160 3 is_stmt 1 view .LVU238
 160:Src/main.c    ****   RCC_OscInitStruct.PLL.PLLR = RCC_PLLR_DIV2;
 769              		.loc 1 160 30 is_stmt 0 view .LVU239
 770 005a 1492     		str	r2, [sp, #80]
 161:Src/main.c    ****   if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 771              		.loc 1 161 3 is_stmt 1 view .LVU240
 161:Src/main.c    ****   if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 772              		.loc 1 161 30 is_stmt 0 view .LVU241
 773 005c 1592     		str	r2, [sp, #84]
 162:Src/main.c    ****   {
 774              		.loc 1 162 3 is_stmt 1 view .LVU242
 162:Src/main.c    ****   {
 775              		.loc 1 162 7 is_stmt 0 view .LVU243
 776 005e 05A8     		add	r0, sp, #20
 777 0060 FFF7FEFF 		bl	HAL_RCC_OscConfig
 778              	.LVL24:
 162:Src/main.c    ****   {
 779              		.loc 1 162 6 view .LVU244
 780 0064 98B9     		cbnz	r0, .L49
 168:Src/main.c    ****                               |RCC_CLOCKTYPE_PCLK1|RCC_CLOCKTYPE_PCLK2;
 781              		.loc 1 168 3 is_stmt 1 view .LVU245
 168:Src/main.c    ****                               |RCC_CLOCKTYPE_PCLK1|RCC_CLOCKTYPE_PCLK2;
 782              		.loc 1 168 31 is_stmt 0 view .LVU246
 783 0066 0F23     		movs	r3, #15
 784 0068 0093     		str	r3, [sp]
 170:Src/main.c    ****   RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV1;
 785              		.loc 1 170 3 is_stmt 1 view .LVU247
 170:Src/main.c    ****   RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV1;
 786              		.loc 1 170 34 is_stmt 0 view .LVU248
 787 006a 0323     		movs	r3, #3
 788 006c 0193     		str	r3, [sp, #4]
 171:Src/main.c    ****   RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV1;
 789              		.loc 1 171 3 is_stmt 1 view .LVU249
 171:Src/main.c    ****   RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV1;
 790              		.loc 1 171 35 is_stmt 0 view .LVU250
 791 006e 0023     		movs	r3, #0
 792 0070 0293     		str	r3, [sp, #8]
 172:Src/main.c    ****   RCC_ClkInitStruct.APB2CLKDivider = RCC_HCLK_DIV1;
 793              		.loc 1 172 3 is_stmt 1 view .LVU251
 172:Src/main.c    ****   RCC_ClkInitStruct.APB2CLKDivider = RCC_HCLK_DIV1;
 794              		.loc 1 172 36 is_stmt 0 view .LVU252
 795 0072 0393     		str	r3, [sp, #12]
 173:Src/main.c    **** 
 796              		.loc 1 173 3 is_stmt 1 view .LVU253
 173:Src/main.c    **** 
 797              		.loc 1 173 36 is_stmt 0 view .LVU254
 798 0074 0493     		str	r3, [sp, #16]
 175:Src/main.c    ****   {
 799              		.loc 1 175 3 is_stmt 1 view .LVU255
 175:Src/main.c    ****   {
 800              		.loc 1 175 7 is_stmt 0 view .LVU256
ARM GAS  /tmp/ccUAoPyn.s 			page 29


 801 0076 0121     		movs	r1, #1
 802 0078 6846     		mov	r0, sp
 803 007a FFF7FEFF 		bl	HAL_RCC_ClockConfig
 804              	.LVL25:
 175:Src/main.c    ****   {
 805              		.loc 1 175 6 view .LVU257
 806 007e 40B9     		cbnz	r0, .L50
 181:Src/main.c    **** }
 807              		.loc 1 181 3 is_stmt 1 view .LVU258
 808 0080 FFF7FEFF 		bl	HAL_RCCEx_EnableMSIPLLMode
 809              	.LVL26:
 182:Src/main.c    **** 
 810              		.loc 1 182 1 is_stmt 0 view .LVU259
 811 0084 17B0     		add	sp, sp, #92
 812              	.LCFI14:
 813              		.cfi_remember_state
 814              		.cfi_def_cfa_offset 4
 815              		@ sp needed
 816 0086 5DF804FB 		ldr	pc, [sp], #4
 817              	.L48:
 818              	.LCFI15:
 819              		.cfi_restore_state
 141:Src/main.c    ****   }
 820              		.loc 1 141 5 is_stmt 1 view .LVU260
 821 008a FFF7FEFF 		bl	Error_Handler
 822              	.LVL27:
 823              	.L49:
 164:Src/main.c    ****   }
 824              		.loc 1 164 5 view .LVU261
 825 008e FFF7FEFF 		bl	Error_Handler
 826              	.LVL28:
 827              	.L50:
 177:Src/main.c    ****   }
 828              		.loc 1 177 5 view .LVU262
 829 0092 FFF7FEFF 		bl	Error_Handler
 830              	.LVL29:
 831              	.L52:
 832 0096 00BF     		.align	2
 833              	.L51:
 834 0098 00100240 		.word	1073876992
 835              		.cfi_endproc
 836              	.LFE136:
 838              		.section	.rodata.main.str1.4,"aMS",%progbits,1
 839              		.align	2
 840              	.LC0:
 841 0000 25642063 		.ascii	"%d cm\012\015\000"
 841      6D0A0D00 
 842              		.section	.text.main,"ax",%progbits
 843              		.align	1
 844              		.global	main
 845              		.syntax unified
 846              		.thumb
 847              		.thumb_func
 848              		.fpu fpv4-sp-d16
 850              	main:
 851              	.LFB135:
  78:Src/main.c    ****   /* USER CODE BEGIN 1 */
ARM GAS  /tmp/ccUAoPyn.s 			page 30


 852              		.loc 1 78 1 view -0
 853              		.cfi_startproc
 854              		@ Volatile: function does not return.
 855              		@ args = 0, pretend = 0, frame = 0
 856              		@ frame_needed = 0, uses_anonymous_args = 0
 857 0000 08B5     		push	{r3, lr}
 858              	.LCFI16:
 859              		.cfi_def_cfa_offset 8
 860              		.cfi_offset 3, -8
 861              		.cfi_offset 14, -4
  86:Src/main.c    **** 
 862              		.loc 1 86 3 view .LVU264
 863 0002 FFF7FEFF 		bl	HAL_Init
 864              	.LVL30:
  93:Src/main.c    **** 
 865              		.loc 1 93 3 view .LVU265
 866 0006 FFF7FEFF 		bl	SystemClock_Config
 867              	.LVL31:
 100:Src/main.c    ****   MX_TIM1_Init();
 868              		.loc 1 100 3 view .LVU266
 869 000a FFF7FEFF 		bl	MX_GPIO_Init
 870              	.LVL32:
 101:Src/main.c    ****   MX_USART2_UART_Init();
 871              		.loc 1 101 3 view .LVU267
 872 000e FFF7FEFF 		bl	MX_TIM1_Init
 873              	.LVL33:
 102:Src/main.c    ****   MX_TIM16_Init();
 874              		.loc 1 102 3 view .LVU268
 875 0012 FFF7FEFF 		bl	MX_USART2_UART_Init
 876              	.LVL34:
 103:Src/main.c    ****   /* USER CODE BEGIN 2 */
 877              		.loc 1 103 3 view .LVU269
 878 0016 FFF7FEFF 		bl	MX_TIM16_Init
 879              	.LVL35:
 105:Src/main.c    ****   HAL_TIM_Base_Start(&htim16);
 880              		.loc 1 105 3 view .LVU270
 881 001a 184C     		ldr	r4, .L56
 882 001c 2046     		mov	r0, r4
 883 001e FFF7FEFF 		bl	HAL_TIM_Base_Start_IT
 884              	.LVL36:
 106:Src/main.c    ****   HAL_TIM_OC_Start(&htim16, TIM_CHANNEL_1);
 885              		.loc 1 106 3 view .LVU271
 886 0022 174D     		ldr	r5, .L56+4
 887 0024 2846     		mov	r0, r5
 888 0026 FFF7FEFF 		bl	HAL_TIM_Base_Start
 889              	.LVL37:
 107:Src/main.c    ****   TIM16->CCR1 = 10;
 890              		.loc 1 107 3 view .LVU272
 891 002a 0021     		movs	r1, #0
 892 002c 2846     		mov	r0, r5
 893 002e FFF7FEFF 		bl	HAL_TIM_OC_Start
 894              	.LVL38:
 108:Src/main.c    ****   HAL_TIM_IC_Start_IT(&htim1, TIM_CHANNEL_1);
 895              		.loc 1 108 3 view .LVU273
 108:Src/main.c    ****   HAL_TIM_IC_Start_IT(&htim1, TIM_CHANNEL_1);
 896              		.loc 1 108 15 is_stmt 0 view .LVU274
 897 0032 144B     		ldr	r3, .L56+8
ARM GAS  /tmp/ccUAoPyn.s 			page 31


 898 0034 0A22     		movs	r2, #10
 899 0036 5A63     		str	r2, [r3, #52]
 109:Src/main.c    **** 
 900              		.loc 1 109 3 is_stmt 1 view .LVU275
 901 0038 0021     		movs	r1, #0
 902 003a 2046     		mov	r0, r4
 903 003c FFF7FEFF 		bl	HAL_TIM_IC_Start_IT
 904              	.LVL39:
 905              	.L54:
 115:Src/main.c    ****   {
 906              		.loc 1 115 3 discriminator 1 view .LVU276
 117:Src/main.c    ****   sprintf((char*)buf, "%d cm\n\r", entfernung);
 907              		.loc 1 117 3 discriminator 1 view .LVU277
 117:Src/main.c    ****   sprintf((char*)buf, "%d cm\n\r", entfernung);
 908              		.loc 1 117 27 is_stmt 0 discriminator 1 view .LVU278
 909 0040 114B     		ldr	r3, .L56+12
 910 0042 1B88     		ldrh	r3, [r3]
 911 0044 9BB2     		uxth	r3, r3
 912 0046 114A     		ldr	r2, .L56+16
 913 0048 A2FB0323 		umull	r2, r3, r2, r3
 914 004c 5B09     		lsrs	r3, r3, #5
 117:Src/main.c    ****   sprintf((char*)buf, "%d cm\n\r", entfernung);
 915              		.loc 1 117 14 discriminator 1 view .LVU279
 916 004e 104A     		ldr	r2, .L56+20
 917 0050 1360     		str	r3, [r2]
 118:Src/main.c    ****   HAL_UART_Transmit(&huart2, buf, strlen((char*)buf), 500);
 918              		.loc 1 118 3 is_stmt 1 discriminator 1 view .LVU280
 919 0052 1268     		ldr	r2, [r2]
 920 0054 0F4C     		ldr	r4, .L56+24
 921 0056 1049     		ldr	r1, .L56+28
 922 0058 2046     		mov	r0, r4
 923 005a FFF7FEFF 		bl	sprintf
 924              	.LVL40:
 119:Src/main.c    ****   HAL_Delay(1000);
 925              		.loc 1 119 3 discriminator 1 view .LVU281
 119:Src/main.c    ****   HAL_Delay(1000);
 926              		.loc 1 119 35 is_stmt 0 discriminator 1 view .LVU282
 927 005e 2046     		mov	r0, r4
 928 0060 FFF7FEFF 		bl	strlen
 929              	.LVL41:
 119:Src/main.c    ****   HAL_Delay(1000);
 930              		.loc 1 119 3 discriminator 1 view .LVU283
 931 0064 4FF4FA73 		mov	r3, #500
 932 0068 82B2     		uxth	r2, r0
 933 006a 2146     		mov	r1, r4
 934 006c 0B48     		ldr	r0, .L56+32
 935 006e FFF7FEFF 		bl	HAL_UART_Transmit
 936              	.LVL42:
 120:Src/main.c    ****     /* USER CODE END WHILE */
 937              		.loc 1 120 3 is_stmt 1 discriminator 1 view .LVU284
 938 0072 4FF47A70 		mov	r0, #1000
 939 0076 FFF7FEFF 		bl	HAL_Delay
 940              	.LVL43:
 115:Src/main.c    ****   {
 941              		.loc 1 115 9 discriminator 1 view .LVU285
 942 007a E1E7     		b	.L54
 943              	.L57:
ARM GAS  /tmp/ccUAoPyn.s 			page 32


 944              		.align	2
 945              	.L56:
 946 007c 00000000 		.word	htim1
 947 0080 00000000 		.word	htim16
 948 0084 00440140 		.word	1073824768
 949 0088 00000000 		.word	.LANCHOR3
 950 008c 09CB3D8D 		.word	-1925330167
 951 0090 00000000 		.word	.LANCHOR4
 952 0094 00000000 		.word	buf
 953 0098 00000000 		.word	.LC0
 954 009c 00000000 		.word	huart2
 955              		.cfi_endproc
 956              	.LFE135:
 958              		.global	entfernung
 959              		.comm	buf,15,4
 960              		.global	difference
 961              		.global	fall
 962              		.global	rise
 963              		.global	status
 964              		.comm	huart2,132,4
 965              		.comm	htim16,76,4
 966              		.comm	htim1,76,4
 967              		.section	.bss.difference,"aw",%nobits
 968              		.align	1
 969              		.set	.LANCHOR3,. + 0
 972              	difference:
 973 0000 0000     		.space	2
 974              		.section	.bss.entfernung,"aw",%nobits
 975              		.align	2
 976              		.set	.LANCHOR4,. + 0
 979              	entfernung:
 980 0000 00000000 		.space	4
 981              		.section	.bss.fall,"aw",%nobits
 982              		.align	1
 983              		.set	.LANCHOR2,. + 0
 986              	fall:
 987 0000 0000     		.space	2
 988              		.section	.bss.rise,"aw",%nobits
 989              		.align	1
 990              		.set	.LANCHOR1,. + 0
 993              	rise:
 994 0000 0000     		.space	2
 995              		.section	.bss.status,"aw",%nobits
 996              		.set	.LANCHOR0,. + 0
 999              	status:
 1000 0000 00       		.space	1
 1001              		.text
 1002              	.Letext0:
 1003              		.file 3 "/usr/lib/gcc/arm-none-eabi/9.2.1/include/stdint.h"
 1004              		.file 4 "Drivers/CMSIS/Include/core_cm4.h"
 1005              		.file 5 "Drivers/CMSIS/Device/ST/STM32L4xx/Include/system_stm32l4xx.h"
 1006              		.file 6 "Drivers/CMSIS/Device/ST/STM32L4xx/Include/stm32l432xx.h"
 1007              		.file 7 "Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_hal_def.h"
 1008              		.file 8 "Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_hal_rcc.h"
 1009              		.file 9 "Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_hal_gpio.h"
 1010              		.file 10 "Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_hal_dma.h"
 1011              		.file 11 "Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_hal_flash.h"
ARM GAS  /tmp/ccUAoPyn.s 			page 33


 1012              		.file 12 "Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_hal_tim.h"
 1013              		.file 13 "Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_hal_uart.h"
 1014              		.file 14 "Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_hal.h"
 1015              		.file 15 "/usr/lib/gcc/arm-none-eabi/9.2.1/include/stddef.h"
 1016              		.file 16 "/usr/include/newlib/sys/_types.h"
 1017              		.file 17 "/usr/include/newlib/sys/reent.h"
 1018              		.file 18 "/usr/include/newlib/sys/lock.h"
 1019              		.file 19 "Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_hal_tim_ex.h"
 1020              		.file 20 "Inc/main.h"
 1021              		.file 21 "Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_hal_pwr_ex.h"
 1022              		.file 22 "Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_hal_pwr.h"
 1023              		.file 23 "Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_hal_rcc_ex.h"
 1024              		.file 24 "/usr/include/newlib/stdio.h"
 1025              		.file 25 "/usr/include/newlib/string.h"
 1026              		.file 26 "<built-in>"
ARM GAS  /tmp/ccUAoPyn.s 			page 34


DEFINED SYMBOLS
                            *ABS*:0000000000000000 main.c
     /tmp/ccUAoPyn.s:18     .text.MX_GPIO_Init:0000000000000000 $t
     /tmp/ccUAoPyn.s:25     .text.MX_GPIO_Init:0000000000000000 MX_GPIO_Init
     /tmp/ccUAoPyn.s:130    .text.MX_GPIO_Init:000000000000006c $d
     /tmp/ccUAoPyn.s:136    .text.HAL_TIM_IC_CaptureCallback:0000000000000000 $t
     /tmp/ccUAoPyn.s:143    .text.HAL_TIM_IC_CaptureCallback:0000000000000000 HAL_TIM_IC_CaptureCallback
     /tmp/ccUAoPyn.s:251    .text.HAL_TIM_IC_CaptureCallback:0000000000000080 $d
                            *COM*:000000000000004c htim1
     /tmp/ccUAoPyn.s:260    .text.Error_Handler:0000000000000000 $t
     /tmp/ccUAoPyn.s:267    .text.Error_Handler:0000000000000000 Error_Handler
     /tmp/ccUAoPyn.s:299    .text.MX_TIM1_Init:0000000000000000 $t
     /tmp/ccUAoPyn.s:305    .text.MX_TIM1_Init:0000000000000000 MX_TIM1_Init
     /tmp/ccUAoPyn.s:426    .text.MX_TIM1_Init:0000000000000070 $d
     /tmp/ccUAoPyn.s:432    .text.MX_USART2_UART_Init:0000000000000000 $t
     /tmp/ccUAoPyn.s:438    .text.MX_USART2_UART_Init:0000000000000000 MX_USART2_UART_Init
     /tmp/ccUAoPyn.s:499    .text.MX_USART2_UART_Init:0000000000000030 $d
                            *COM*:0000000000000084 huart2
     /tmp/ccUAoPyn.s:505    .text.MX_TIM16_Init:0000000000000000 $t
     /tmp/ccUAoPyn.s:511    .text.MX_TIM16_Init:0000000000000000 MX_TIM16_Init
     /tmp/ccUAoPyn.s:674    .text.MX_TIM16_Init:0000000000000098 $d
                            *COM*:000000000000004c htim16
     /tmp/ccUAoPyn.s:680    .text.SystemClock_Config:0000000000000000 $t
     /tmp/ccUAoPyn.s:687    .text.SystemClock_Config:0000000000000000 SystemClock_Config
     /tmp/ccUAoPyn.s:834    .text.SystemClock_Config:0000000000000098 $d
     /tmp/ccUAoPyn.s:839    .rodata.main.str1.4:0000000000000000 $d
     /tmp/ccUAoPyn.s:843    .text.main:0000000000000000 $t
     /tmp/ccUAoPyn.s:850    .text.main:0000000000000000 main
     /tmp/ccUAoPyn.s:946    .text.main:000000000000007c $d
                            *COM*:000000000000000f buf
     /tmp/ccUAoPyn.s:979    .bss.entfernung:0000000000000000 entfernung
     /tmp/ccUAoPyn.s:972    .bss.difference:0000000000000000 difference
     /tmp/ccUAoPyn.s:986    .bss.fall:0000000000000000 fall
     /tmp/ccUAoPyn.s:993    .bss.rise:0000000000000000 rise
     /tmp/ccUAoPyn.s:999    .bss.status:0000000000000000 status
     /tmp/ccUAoPyn.s:968    .bss.difference:0000000000000000 $d
     /tmp/ccUAoPyn.s:975    .bss.entfernung:0000000000000000 $d
     /tmp/ccUAoPyn.s:982    .bss.fall:0000000000000000 $d
     /tmp/ccUAoPyn.s:989    .bss.rise:0000000000000000 $d
     /tmp/ccUAoPyn.s:1000   .bss.status:0000000000000000 $d

UNDEFINED SYMBOLS
HAL_GPIO_WritePin
HAL_GPIO_Init
HAL_TIM_IC_Init
HAL_TIMEx_MasterConfigSynchronization
HAL_TIM_IC_ConfigChannel
HAL_UART_Init
memset
HAL_TIM_Base_Init
HAL_TIM_PWM_Init
HAL_TIM_PWM_ConfigChannel
HAL_TIMEx_ConfigBreakDeadTime
HAL_TIM_MspPostInit
HAL_PWREx_ControlVoltageScaling
HAL_PWR_EnableBkUpAccess
HAL_RCC_OscConfig
ARM GAS  /tmp/ccUAoPyn.s 			page 35


HAL_RCC_ClockConfig
HAL_RCCEx_EnableMSIPLLMode
HAL_Init
HAL_TIM_Base_Start_IT
HAL_TIM_Base_Start
HAL_TIM_OC_Start
HAL_TIM_IC_Start_IT
sprintf
strlen
HAL_UART_Transmit
HAL_Delay
