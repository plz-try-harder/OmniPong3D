ARM GAS  /tmp/ccBypRVb.s 			page 1


   1              		.cpu cortex-m4
   2              		.eabi_attribute 27, 1
   3              		.eabi_attribute 28, 1
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 1
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.file	"system_stm32l4xx.c"
  14              		.text
  15              	.Ltext0:
  16              		.cfi_sections	.debug_frame
  17              		.section	.text.SystemInit,"ax",%progbits
  18              		.align	1
  19              		.global	SystemInit
  20              		.arch armv7e-m
  21              		.syntax unified
  22              		.thumb
  23              		.thumb_func
  24              		.fpu fpv4-sp-d16
  26              	SystemInit:
  27              	.LFB132:
  28              		.file 1 "Core/Src/system_stm32l4xx.c"
   1:Core/Src/system_stm32l4xx.c **** /**
   2:Core/Src/system_stm32l4xx.c ****   ******************************************************************************
   3:Core/Src/system_stm32l4xx.c ****   * @file    system_stm32l4xx.c
   4:Core/Src/system_stm32l4xx.c ****   * @author  MCD Application Team
   5:Core/Src/system_stm32l4xx.c ****   * @brief   CMSIS Cortex-M4 Device Peripheral Access Layer System Source File
   6:Core/Src/system_stm32l4xx.c ****   *
   7:Core/Src/system_stm32l4xx.c ****   *   This file provides two functions and one global variable to be called from
   8:Core/Src/system_stm32l4xx.c ****   *   user application:
   9:Core/Src/system_stm32l4xx.c ****   *      - SystemInit(): This function is called at startup just after reset and
  10:Core/Src/system_stm32l4xx.c ****   *                      before branch to main program. This call is made inside
  11:Core/Src/system_stm32l4xx.c ****   *                      the "startup_stm32l4xx.s" file.
  12:Core/Src/system_stm32l4xx.c ****   *
  13:Core/Src/system_stm32l4xx.c ****   *      - SystemCoreClock variable: Contains the core clock (HCLK), it can be used
  14:Core/Src/system_stm32l4xx.c ****   *                                  by the user application to setup the SysTick
  15:Core/Src/system_stm32l4xx.c ****   *                                  timer or configure other parameters.
  16:Core/Src/system_stm32l4xx.c ****   *
  17:Core/Src/system_stm32l4xx.c ****   *      - SystemCoreClockUpdate(): Updates the variable SystemCoreClock and must
  18:Core/Src/system_stm32l4xx.c ****   *                                 be called whenever the core clock is changed
  19:Core/Src/system_stm32l4xx.c ****   *                                 during program execution.
  20:Core/Src/system_stm32l4xx.c ****   *
  21:Core/Src/system_stm32l4xx.c ****   *   After each device reset the MSI (4 MHz) is used as system clock source.
  22:Core/Src/system_stm32l4xx.c ****   *   Then SystemInit() function is called, in "startup_stm32l4xx.s" file, to
  23:Core/Src/system_stm32l4xx.c ****   *   configure the system clock before to branch to main program.
  24:Core/Src/system_stm32l4xx.c ****   *
  25:Core/Src/system_stm32l4xx.c ****   *   This file configures the system clock as follows:
  26:Core/Src/system_stm32l4xx.c ****   *=============================================================================
  27:Core/Src/system_stm32l4xx.c ****   *-----------------------------------------------------------------------------
  28:Core/Src/system_stm32l4xx.c ****   *        System Clock source                    | MSI
  29:Core/Src/system_stm32l4xx.c ****   *-----------------------------------------------------------------------------
  30:Core/Src/system_stm32l4xx.c ****   *        SYSCLK(Hz)                             | 4000000
ARM GAS  /tmp/ccBypRVb.s 			page 2


  31:Core/Src/system_stm32l4xx.c ****   *-----------------------------------------------------------------------------
  32:Core/Src/system_stm32l4xx.c ****   *        HCLK(Hz)                               | 4000000
  33:Core/Src/system_stm32l4xx.c ****   *-----------------------------------------------------------------------------
  34:Core/Src/system_stm32l4xx.c ****   *        AHB Prescaler                          | 1
  35:Core/Src/system_stm32l4xx.c ****   *-----------------------------------------------------------------------------
  36:Core/Src/system_stm32l4xx.c ****   *        APB1 Prescaler                         | 1
  37:Core/Src/system_stm32l4xx.c ****   *-----------------------------------------------------------------------------
  38:Core/Src/system_stm32l4xx.c ****   *        APB2 Prescaler                         | 1
  39:Core/Src/system_stm32l4xx.c ****   *-----------------------------------------------------------------------------
  40:Core/Src/system_stm32l4xx.c ****   *        PLL_M                                  | 1
  41:Core/Src/system_stm32l4xx.c ****   *-----------------------------------------------------------------------------
  42:Core/Src/system_stm32l4xx.c ****   *        PLL_N                                  | 8
  43:Core/Src/system_stm32l4xx.c ****   *-----------------------------------------------------------------------------
  44:Core/Src/system_stm32l4xx.c ****   *        PLL_P                                  | 7
  45:Core/Src/system_stm32l4xx.c ****   *-----------------------------------------------------------------------------
  46:Core/Src/system_stm32l4xx.c ****   *        PLL_Q                                  | 2
  47:Core/Src/system_stm32l4xx.c ****   *-----------------------------------------------------------------------------
  48:Core/Src/system_stm32l4xx.c ****   *        PLL_R                                  | 2
  49:Core/Src/system_stm32l4xx.c ****   *-----------------------------------------------------------------------------
  50:Core/Src/system_stm32l4xx.c ****   *        PLLSAI1_P                              | NA
  51:Core/Src/system_stm32l4xx.c ****   *-----------------------------------------------------------------------------
  52:Core/Src/system_stm32l4xx.c ****   *        PLLSAI1_Q                              | NA
  53:Core/Src/system_stm32l4xx.c ****   *-----------------------------------------------------------------------------
  54:Core/Src/system_stm32l4xx.c ****   *        PLLSAI1_R                              | NA
  55:Core/Src/system_stm32l4xx.c ****   *-----------------------------------------------------------------------------
  56:Core/Src/system_stm32l4xx.c ****   *        PLLSAI2_P                              | NA
  57:Core/Src/system_stm32l4xx.c ****   *-----------------------------------------------------------------------------
  58:Core/Src/system_stm32l4xx.c ****   *        PLLSAI2_Q                              | NA
  59:Core/Src/system_stm32l4xx.c ****   *-----------------------------------------------------------------------------
  60:Core/Src/system_stm32l4xx.c ****   *        PLLSAI2_R                              | NA
  61:Core/Src/system_stm32l4xx.c ****   *-----------------------------------------------------------------------------
  62:Core/Src/system_stm32l4xx.c ****   *        Require 48MHz for USB OTG FS,          | Disabled
  63:Core/Src/system_stm32l4xx.c ****   *        SDIO and RNG clock                     |
  64:Core/Src/system_stm32l4xx.c ****   *-----------------------------------------------------------------------------
  65:Core/Src/system_stm32l4xx.c ****   *=============================================================================
  66:Core/Src/system_stm32l4xx.c ****   ******************************************************************************
  67:Core/Src/system_stm32l4xx.c ****   * @attention
  68:Core/Src/system_stm32l4xx.c ****   *
  69:Core/Src/system_stm32l4xx.c ****   * <h2><center>&copy; Copyright (c) 2017 STMicroelectronics.
  70:Core/Src/system_stm32l4xx.c ****   * All rights reserved.</center></h2>
  71:Core/Src/system_stm32l4xx.c ****   *
  72:Core/Src/system_stm32l4xx.c ****   * This software component is licensed by ST under Apache License, Version 2.0,
  73:Core/Src/system_stm32l4xx.c ****   * the "License"; You may not use this file except in compliance with the
  74:Core/Src/system_stm32l4xx.c ****   * License. You may obtain a copy of the License at:
  75:Core/Src/system_stm32l4xx.c ****   *                        opensource.org/licenses/Apache-2.0
  76:Core/Src/system_stm32l4xx.c ****   *
  77:Core/Src/system_stm32l4xx.c ****   ******************************************************************************
  78:Core/Src/system_stm32l4xx.c ****   */
  79:Core/Src/system_stm32l4xx.c **** 
  80:Core/Src/system_stm32l4xx.c **** /** @addtogroup CMSIS
  81:Core/Src/system_stm32l4xx.c ****   * @{
  82:Core/Src/system_stm32l4xx.c ****   */
  83:Core/Src/system_stm32l4xx.c **** 
  84:Core/Src/system_stm32l4xx.c **** /** @addtogroup stm32l4xx_system
  85:Core/Src/system_stm32l4xx.c ****   * @{
  86:Core/Src/system_stm32l4xx.c ****   */
  87:Core/Src/system_stm32l4xx.c **** 
ARM GAS  /tmp/ccBypRVb.s 			page 3


  88:Core/Src/system_stm32l4xx.c **** /** @addtogroup STM32L4xx_System_Private_Includes
  89:Core/Src/system_stm32l4xx.c ****   * @{
  90:Core/Src/system_stm32l4xx.c ****   */
  91:Core/Src/system_stm32l4xx.c **** 
  92:Core/Src/system_stm32l4xx.c **** #include "stm32l4xx.h"
  93:Core/Src/system_stm32l4xx.c **** 
  94:Core/Src/system_stm32l4xx.c **** /**
  95:Core/Src/system_stm32l4xx.c ****   * @}
  96:Core/Src/system_stm32l4xx.c ****   */
  97:Core/Src/system_stm32l4xx.c **** 
  98:Core/Src/system_stm32l4xx.c **** /** @addtogroup STM32L4xx_System_Private_TypesDefinitions
  99:Core/Src/system_stm32l4xx.c ****   * @{
 100:Core/Src/system_stm32l4xx.c ****   */
 101:Core/Src/system_stm32l4xx.c **** 
 102:Core/Src/system_stm32l4xx.c **** /**
 103:Core/Src/system_stm32l4xx.c ****   * @}
 104:Core/Src/system_stm32l4xx.c ****   */
 105:Core/Src/system_stm32l4xx.c **** 
 106:Core/Src/system_stm32l4xx.c **** /** @addtogroup STM32L4xx_System_Private_Defines
 107:Core/Src/system_stm32l4xx.c ****   * @{
 108:Core/Src/system_stm32l4xx.c ****   */
 109:Core/Src/system_stm32l4xx.c **** 
 110:Core/Src/system_stm32l4xx.c **** #if !defined  (HSE_VALUE)
 111:Core/Src/system_stm32l4xx.c ****   #define HSE_VALUE    8000000U  /*!< Value of the External oscillator in Hz */
 112:Core/Src/system_stm32l4xx.c **** #endif /* HSE_VALUE */
 113:Core/Src/system_stm32l4xx.c **** 
 114:Core/Src/system_stm32l4xx.c **** #if !defined  (MSI_VALUE)
 115:Core/Src/system_stm32l4xx.c ****   #define MSI_VALUE    4000000U  /*!< Value of the Internal oscillator in Hz*/
 116:Core/Src/system_stm32l4xx.c **** #endif /* MSI_VALUE */
 117:Core/Src/system_stm32l4xx.c **** 
 118:Core/Src/system_stm32l4xx.c **** #if !defined  (HSI_VALUE)
 119:Core/Src/system_stm32l4xx.c ****   #define HSI_VALUE    16000000U /*!< Value of the Internal oscillator in Hz*/
 120:Core/Src/system_stm32l4xx.c **** #endif /* HSI_VALUE */
 121:Core/Src/system_stm32l4xx.c **** 
 122:Core/Src/system_stm32l4xx.c **** /* Note: Following vector table addresses must be defined in line with linker
 123:Core/Src/system_stm32l4xx.c ****          configuration. */
 124:Core/Src/system_stm32l4xx.c **** /*!< Uncomment the following line if you need to relocate the vector table
 125:Core/Src/system_stm32l4xx.c ****      anywhere in Flash or Sram, else the vector table is kept at the automatic
 126:Core/Src/system_stm32l4xx.c ****      remap of boot address selected */
 127:Core/Src/system_stm32l4xx.c **** /* #define USER_VECT_TAB_ADDRESS */
 128:Core/Src/system_stm32l4xx.c **** 
 129:Core/Src/system_stm32l4xx.c **** #if defined(USER_VECT_TAB_ADDRESS)
 130:Core/Src/system_stm32l4xx.c **** /*!< Uncomment the following line if you need to relocate your vector Table
 131:Core/Src/system_stm32l4xx.c ****      in Sram else user remap will be done in Flash. */
 132:Core/Src/system_stm32l4xx.c **** /* #define VECT_TAB_SRAM */
 133:Core/Src/system_stm32l4xx.c **** 
 134:Core/Src/system_stm32l4xx.c **** #if defined(VECT_TAB_SRAM)
 135:Core/Src/system_stm32l4xx.c **** #define VECT_TAB_BASE_ADDRESS   SRAM1_BASE      /*!< Vector Table base address field.
 136:Core/Src/system_stm32l4xx.c ****                                                      This value must be a multiple of 0x200. */
 137:Core/Src/system_stm32l4xx.c **** #define VECT_TAB_OFFSET         0x00000000U     /*!< Vector Table base offset field.
 138:Core/Src/system_stm32l4xx.c ****                                                      This value must be a multiple of 0x200. */
 139:Core/Src/system_stm32l4xx.c **** #else
 140:Core/Src/system_stm32l4xx.c **** #define VECT_TAB_BASE_ADDRESS   FLASH_BASE      /*!< Vector Table base address field.
 141:Core/Src/system_stm32l4xx.c ****                                                      This value must be a multiple of 0x200. */
 142:Core/Src/system_stm32l4xx.c **** #define VECT_TAB_OFFSET         0x00000000U     /*!< Vector Table base offset field.
 143:Core/Src/system_stm32l4xx.c ****                                                      This value must be a multiple of 0x200. */
 144:Core/Src/system_stm32l4xx.c **** #endif /* VECT_TAB_SRAM */
ARM GAS  /tmp/ccBypRVb.s 			page 4


 145:Core/Src/system_stm32l4xx.c **** #endif /* USER_VECT_TAB_ADDRESS */
 146:Core/Src/system_stm32l4xx.c **** 
 147:Core/Src/system_stm32l4xx.c **** /******************************************************************************/
 148:Core/Src/system_stm32l4xx.c **** /**
 149:Core/Src/system_stm32l4xx.c ****   * @}
 150:Core/Src/system_stm32l4xx.c ****   */
 151:Core/Src/system_stm32l4xx.c **** 
 152:Core/Src/system_stm32l4xx.c **** /** @addtogroup STM32L4xx_System_Private_Macros
 153:Core/Src/system_stm32l4xx.c ****   * @{
 154:Core/Src/system_stm32l4xx.c ****   */
 155:Core/Src/system_stm32l4xx.c **** 
 156:Core/Src/system_stm32l4xx.c **** /**
 157:Core/Src/system_stm32l4xx.c ****   * @}
 158:Core/Src/system_stm32l4xx.c ****   */
 159:Core/Src/system_stm32l4xx.c **** 
 160:Core/Src/system_stm32l4xx.c **** /** @addtogroup STM32L4xx_System_Private_Variables
 161:Core/Src/system_stm32l4xx.c ****   * @{
 162:Core/Src/system_stm32l4xx.c ****   */
 163:Core/Src/system_stm32l4xx.c ****   /* The SystemCoreClock variable is updated in three ways:
 164:Core/Src/system_stm32l4xx.c ****       1) by calling CMSIS function SystemCoreClockUpdate()
 165:Core/Src/system_stm32l4xx.c ****       2) by calling HAL API function HAL_RCC_GetHCLKFreq()
 166:Core/Src/system_stm32l4xx.c ****       3) each time HAL_RCC_ClockConfig() is called to configure the system clock frequency
 167:Core/Src/system_stm32l4xx.c ****          Note: If you use this function to configure the system clock; then there
 168:Core/Src/system_stm32l4xx.c ****                is no need to call the 2 first functions listed above, since SystemCoreClock
 169:Core/Src/system_stm32l4xx.c ****                variable is updated automatically.
 170:Core/Src/system_stm32l4xx.c ****   */
 171:Core/Src/system_stm32l4xx.c ****   uint32_t SystemCoreClock = 4000000U;
 172:Core/Src/system_stm32l4xx.c **** 
 173:Core/Src/system_stm32l4xx.c ****   const uint8_t  AHBPrescTable[16] = {0U, 0U, 0U, 0U, 0U, 0U, 0U, 0U, 1U, 2U, 3U, 4U, 6U, 7U, 8U, 9
 174:Core/Src/system_stm32l4xx.c ****   const uint8_t  APBPrescTable[8] =  {0U, 0U, 0U, 0U, 1U, 2U, 3U, 4U};
 175:Core/Src/system_stm32l4xx.c ****   const uint32_t MSIRangeTable[12] = {100000U,   200000U,   400000U,   800000U,  1000000U,  2000000
 176:Core/Src/system_stm32l4xx.c ****                                       4000000U, 8000000U, 16000000U, 24000000U, 32000000U, 48000000
 177:Core/Src/system_stm32l4xx.c **** /**
 178:Core/Src/system_stm32l4xx.c ****   * @}
 179:Core/Src/system_stm32l4xx.c ****   */
 180:Core/Src/system_stm32l4xx.c **** 
 181:Core/Src/system_stm32l4xx.c **** /** @addtogroup STM32L4xx_System_Private_FunctionPrototypes
 182:Core/Src/system_stm32l4xx.c ****   * @{
 183:Core/Src/system_stm32l4xx.c ****   */
 184:Core/Src/system_stm32l4xx.c **** 
 185:Core/Src/system_stm32l4xx.c **** /**
 186:Core/Src/system_stm32l4xx.c ****   * @}
 187:Core/Src/system_stm32l4xx.c ****   */
 188:Core/Src/system_stm32l4xx.c **** 
 189:Core/Src/system_stm32l4xx.c **** /** @addtogroup STM32L4xx_System_Private_Functions
 190:Core/Src/system_stm32l4xx.c ****   * @{
 191:Core/Src/system_stm32l4xx.c ****   */
 192:Core/Src/system_stm32l4xx.c **** 
 193:Core/Src/system_stm32l4xx.c **** /**
 194:Core/Src/system_stm32l4xx.c ****   * @brief  Setup the microcontroller system.
 195:Core/Src/system_stm32l4xx.c ****   * @retval None
 196:Core/Src/system_stm32l4xx.c ****   */
 197:Core/Src/system_stm32l4xx.c **** 
 198:Core/Src/system_stm32l4xx.c **** void SystemInit(void)
 199:Core/Src/system_stm32l4xx.c **** {
  29              		.loc 1 199 1 view -0
  30              		.cfi_startproc
ARM GAS  /tmp/ccBypRVb.s 			page 5


  31              		@ args = 0, pretend = 0, frame = 0
  32              		@ frame_needed = 0, uses_anonymous_args = 0
  33              		@ link register save eliminated.
 200:Core/Src/system_stm32l4xx.c **** #if defined(USER_VECT_TAB_ADDRESS)
 201:Core/Src/system_stm32l4xx.c ****   /* Configure the Vector Table location -------------------------------------*/
 202:Core/Src/system_stm32l4xx.c ****   SCB->VTOR = VECT_TAB_BASE_ADDRESS | VECT_TAB_OFFSET;
 203:Core/Src/system_stm32l4xx.c **** #endif
 204:Core/Src/system_stm32l4xx.c **** 
 205:Core/Src/system_stm32l4xx.c ****   /* FPU settings ------------------------------------------------------------*/
 206:Core/Src/system_stm32l4xx.c **** #if (__FPU_PRESENT == 1) && (__FPU_USED == 1)
 207:Core/Src/system_stm32l4xx.c ****   SCB->CPACR |= ((3UL << 20U)|(3UL << 22U));  /* set CP10 and CP11 Full Access */
  34              		.loc 1 207 3 view .LVU1
  35              		.loc 1 207 14 is_stmt 0 view .LVU2
  36 0000 0E4A     		ldr	r2, .L2
  37 0002 D2F88830 		ldr	r3, [r2, #136]
  38 0006 43F47003 		orr	r3, r3, #15728640
  39 000a C2F88830 		str	r3, [r2, #136]
 208:Core/Src/system_stm32l4xx.c **** #endif
 209:Core/Src/system_stm32l4xx.c **** 
 210:Core/Src/system_stm32l4xx.c ****   /* Reset the RCC clock configuration to the default reset state ------------*/
 211:Core/Src/system_stm32l4xx.c ****   /* Set MSION bit */
 212:Core/Src/system_stm32l4xx.c ****   RCC->CR |= RCC_CR_MSION;
  40              		.loc 1 212 3 is_stmt 1 view .LVU3
  41              		.loc 1 212 11 is_stmt 0 view .LVU4
  42 000e 0C4B     		ldr	r3, .L2+4
  43 0010 1A68     		ldr	r2, [r3]
  44 0012 42F00102 		orr	r2, r2, #1
  45 0016 1A60     		str	r2, [r3]
 213:Core/Src/system_stm32l4xx.c **** 
 214:Core/Src/system_stm32l4xx.c ****   /* Reset CFGR register */
 215:Core/Src/system_stm32l4xx.c ****   RCC->CFGR = 0x00000000U;
  46              		.loc 1 215 3 is_stmt 1 view .LVU5
  47              		.loc 1 215 13 is_stmt 0 view .LVU6
  48 0018 0021     		movs	r1, #0
  49 001a 9960     		str	r1, [r3, #8]
 216:Core/Src/system_stm32l4xx.c **** 
 217:Core/Src/system_stm32l4xx.c ****   /* Reset HSEON, CSSON , HSION, and PLLON bits */
 218:Core/Src/system_stm32l4xx.c ****   RCC->CR &= 0xEAF6FFFFU;
  50              		.loc 1 218 3 is_stmt 1 view .LVU7
  51              		.loc 1 218 11 is_stmt 0 view .LVU8
  52 001c 1A68     		ldr	r2, [r3]
  53 001e 22F0A852 		bic	r2, r2, #352321536
  54 0022 22F41022 		bic	r2, r2, #589824
  55 0026 1A60     		str	r2, [r3]
 219:Core/Src/system_stm32l4xx.c **** 
 220:Core/Src/system_stm32l4xx.c ****   /* Reset PLLCFGR register */
 221:Core/Src/system_stm32l4xx.c ****   RCC->PLLCFGR = 0x00001000U;
  56              		.loc 1 221 3 is_stmt 1 view .LVU9
  57              		.loc 1 221 16 is_stmt 0 view .LVU10
  58 0028 4FF48052 		mov	r2, #4096
  59 002c DA60     		str	r2, [r3, #12]
 222:Core/Src/system_stm32l4xx.c **** 
 223:Core/Src/system_stm32l4xx.c ****   /* Reset HSEBYP bit */
 224:Core/Src/system_stm32l4xx.c ****   RCC->CR &= 0xFFFBFFFFU;
  60              		.loc 1 224 3 is_stmt 1 view .LVU11
  61              		.loc 1 224 11 is_stmt 0 view .LVU12
  62 002e 1A68     		ldr	r2, [r3]
ARM GAS  /tmp/ccBypRVb.s 			page 6


  63 0030 22F48022 		bic	r2, r2, #262144
  64 0034 1A60     		str	r2, [r3]
 225:Core/Src/system_stm32l4xx.c **** 
 226:Core/Src/system_stm32l4xx.c ****   /* Disable all interrupts */
 227:Core/Src/system_stm32l4xx.c ****   RCC->CIER = 0x00000000U;
  65              		.loc 1 227 3 is_stmt 1 view .LVU13
  66              		.loc 1 227 13 is_stmt 0 view .LVU14
  67 0036 9961     		str	r1, [r3, #24]
 228:Core/Src/system_stm32l4xx.c **** }
  68              		.loc 1 228 1 view .LVU15
  69 0038 7047     		bx	lr
  70              	.L3:
  71 003a 00BF     		.align	2
  72              	.L2:
  73 003c 00ED00E0 		.word	-536810240
  74 0040 00100240 		.word	1073876992
  75              		.cfi_endproc
  76              	.LFE132:
  78              		.section	.text.SystemCoreClockUpdate,"ax",%progbits
  79              		.align	1
  80              		.global	SystemCoreClockUpdate
  81              		.syntax unified
  82              		.thumb
  83              		.thumb_func
  84              		.fpu fpv4-sp-d16
  86              	SystemCoreClockUpdate:
  87              	.LFB133:
 229:Core/Src/system_stm32l4xx.c **** 
 230:Core/Src/system_stm32l4xx.c **** /**
 231:Core/Src/system_stm32l4xx.c ****   * @brief  Update SystemCoreClock variable according to Clock Register Values.
 232:Core/Src/system_stm32l4xx.c ****   *         The SystemCoreClock variable contains the core clock (HCLK), it can
 233:Core/Src/system_stm32l4xx.c ****   *         be used by the user application to setup the SysTick timer or configure
 234:Core/Src/system_stm32l4xx.c ****   *         other parameters.
 235:Core/Src/system_stm32l4xx.c ****   *
 236:Core/Src/system_stm32l4xx.c ****   * @note   Each time the core clock (HCLK) changes, this function must be called
 237:Core/Src/system_stm32l4xx.c ****   *         to update SystemCoreClock variable value. Otherwise, any configuration
 238:Core/Src/system_stm32l4xx.c ****   *         based on this variable will be incorrect.
 239:Core/Src/system_stm32l4xx.c ****   *
 240:Core/Src/system_stm32l4xx.c ****   * @note   - The system frequency computed by this function is not the real
 241:Core/Src/system_stm32l4xx.c ****   *           frequency in the chip. It is calculated based on the predefined
 242:Core/Src/system_stm32l4xx.c ****   *           constant and the selected clock source:
 243:Core/Src/system_stm32l4xx.c ****   *
 244:Core/Src/system_stm32l4xx.c ****   *           - If SYSCLK source is MSI, SystemCoreClock will contain the MSI_VALUE(*)
 245:Core/Src/system_stm32l4xx.c ****   *
 246:Core/Src/system_stm32l4xx.c ****   *           - If SYSCLK source is HSI, SystemCoreClock will contain the HSI_VALUE(**)
 247:Core/Src/system_stm32l4xx.c ****   *
 248:Core/Src/system_stm32l4xx.c ****   *           - If SYSCLK source is HSE, SystemCoreClock will contain the HSE_VALUE(***)
 249:Core/Src/system_stm32l4xx.c ****   *
 250:Core/Src/system_stm32l4xx.c ****   *           - If SYSCLK source is PLL, SystemCoreClock will contain the HSE_VALUE(***)
 251:Core/Src/system_stm32l4xx.c ****   *             or HSI_VALUE(*) or MSI_VALUE(*) multiplied/divided by the PLL factors.
 252:Core/Src/system_stm32l4xx.c ****   *
 253:Core/Src/system_stm32l4xx.c ****   *         (*) MSI_VALUE is a constant defined in stm32l4xx_hal.h file (default value
 254:Core/Src/system_stm32l4xx.c ****   *             4 MHz) but the real value may vary depending on the variations
 255:Core/Src/system_stm32l4xx.c ****   *             in voltage and temperature.
 256:Core/Src/system_stm32l4xx.c ****   *
 257:Core/Src/system_stm32l4xx.c ****   *         (**) HSI_VALUE is a constant defined in stm32l4xx_hal.h file (default value
 258:Core/Src/system_stm32l4xx.c ****   *              16 MHz) but the real value may vary depending on the variations
ARM GAS  /tmp/ccBypRVb.s 			page 7


 259:Core/Src/system_stm32l4xx.c ****   *              in voltage and temperature.
 260:Core/Src/system_stm32l4xx.c ****   *
 261:Core/Src/system_stm32l4xx.c ****   *         (***) HSE_VALUE is a constant defined in stm32l4xx_hal.h file (default value
 262:Core/Src/system_stm32l4xx.c ****   *              8 MHz), user has to ensure that HSE_VALUE is same as the real
 263:Core/Src/system_stm32l4xx.c ****   *              frequency of the crystal used. Otherwise, this function may
 264:Core/Src/system_stm32l4xx.c ****   *              have wrong result.
 265:Core/Src/system_stm32l4xx.c ****   *
 266:Core/Src/system_stm32l4xx.c ****   *         - The result of this function could be not correct when using fractional
 267:Core/Src/system_stm32l4xx.c ****   *           value for HSE crystal.
 268:Core/Src/system_stm32l4xx.c ****   *
 269:Core/Src/system_stm32l4xx.c ****   * @retval None
 270:Core/Src/system_stm32l4xx.c ****   */
 271:Core/Src/system_stm32l4xx.c **** void SystemCoreClockUpdate(void)
 272:Core/Src/system_stm32l4xx.c **** {
  88              		.loc 1 272 1 is_stmt 1 view -0
  89              		.cfi_startproc
  90              		@ args = 0, pretend = 0, frame = 0
  91              		@ frame_needed = 0, uses_anonymous_args = 0
  92              		@ link register save eliminated.
 273:Core/Src/system_stm32l4xx.c ****   uint32_t tmp, msirange, pllvco, pllsource, pllm, pllr;
  93              		.loc 1 273 3 view .LVU17
 274:Core/Src/system_stm32l4xx.c **** 
 275:Core/Src/system_stm32l4xx.c ****   /* Get MSI Range frequency--------------------------------------------------*/
 276:Core/Src/system_stm32l4xx.c ****   if ((RCC->CR & RCC_CR_MSIRGSEL) == 0U)
  94              		.loc 1 276 3 view .LVU18
  95              		.loc 1 276 11 is_stmt 0 view .LVU19
  96 0000 2F4B     		ldr	r3, .L19
  97 0002 1B68     		ldr	r3, [r3]
  98              		.loc 1 276 6 view .LVU20
  99 0004 13F0080F 		tst	r3, #8
 100 0008 16D1     		bne	.L5
 277:Core/Src/system_stm32l4xx.c ****   { /* MSISRANGE from RCC_CSR applies */
 278:Core/Src/system_stm32l4xx.c ****     msirange = (RCC->CSR & RCC_CSR_MSISRANGE) >> 8U;
 101              		.loc 1 278 5 is_stmt 1 view .LVU21
 102              		.loc 1 278 20 is_stmt 0 view .LVU22
 103 000a 2D4B     		ldr	r3, .L19
 104 000c D3F89430 		ldr	r3, [r3, #148]
 105              		.loc 1 278 14 view .LVU23
 106 0010 C3F30323 		ubfx	r3, r3, #8, #4
 107              	.LVL0:
 108              	.L6:
 279:Core/Src/system_stm32l4xx.c ****   }
 280:Core/Src/system_stm32l4xx.c ****   else
 281:Core/Src/system_stm32l4xx.c ****   { /* MSIRANGE from RCC_CR applies */
 282:Core/Src/system_stm32l4xx.c ****     msirange = (RCC->CR & RCC_CR_MSIRANGE) >> 4U;
 283:Core/Src/system_stm32l4xx.c ****   }
 284:Core/Src/system_stm32l4xx.c ****   /*MSI frequency range in HZ*/
 285:Core/Src/system_stm32l4xx.c ****   msirange = MSIRangeTable[msirange];
 109              		.loc 1 285 3 is_stmt 1 view .LVU24
 110              		.loc 1 285 12 is_stmt 0 view .LVU25
 111 0014 2B4A     		ldr	r2, .L19+4
 112 0016 52F82310 		ldr	r1, [r2, r3, lsl #2]
 113              	.LVL1:
 286:Core/Src/system_stm32l4xx.c **** 
 287:Core/Src/system_stm32l4xx.c ****   /* Get SYSCLK source -------------------------------------------------------*/
 288:Core/Src/system_stm32l4xx.c ****   switch (RCC->CFGR & RCC_CFGR_SWS)
 114              		.loc 1 288 3 is_stmt 1 view .LVU26
ARM GAS  /tmp/ccBypRVb.s 			page 8


 115              		.loc 1 288 14 is_stmt 0 view .LVU27
 116 001a 294A     		ldr	r2, .L19
 117 001c 9368     		ldr	r3, [r2, #8]
 118              		.loc 1 288 21 view .LVU28
 119 001e 03F00C03 		and	r3, r3, #12
 120 0022 0C2B     		cmp	r3, #12
 121 0024 48D8     		bhi	.L7
 122 0026 DFE803F0 		tbb	[pc, r3]
 123              	.L9:
 124 002a 0C       		.byte	(.L12-.L9)/2
 125 002b 47       		.byte	(.L7-.L9)/2
 126 002c 47       		.byte	(.L7-.L9)/2
 127 002d 47       		.byte	(.L7-.L9)/2
 128 002e 19       		.byte	(.L11-.L9)/2
 129 002f 47       		.byte	(.L7-.L9)/2
 130 0030 47       		.byte	(.L7-.L9)/2
 131 0031 47       		.byte	(.L7-.L9)/2
 132 0032 1D       		.byte	(.L10-.L9)/2
 133 0033 47       		.byte	(.L7-.L9)/2
 134 0034 47       		.byte	(.L7-.L9)/2
 135 0035 47       		.byte	(.L7-.L9)/2
 136 0036 21       		.byte	(.L8-.L9)/2
 137              	.LVL2:
 138 0037 00       		.p2align 1
 139              	.L5:
 282:Core/Src/system_stm32l4xx.c ****   }
 140              		.loc 1 282 5 is_stmt 1 view .LVU29
 282:Core/Src/system_stm32l4xx.c ****   }
 141              		.loc 1 282 20 is_stmt 0 view .LVU30
 142 0038 214B     		ldr	r3, .L19
 143 003a 1B68     		ldr	r3, [r3]
 282:Core/Src/system_stm32l4xx.c ****   }
 144              		.loc 1 282 14 view .LVU31
 145 003c C3F30313 		ubfx	r3, r3, #4, #4
 146              	.LVL3:
 282:Core/Src/system_stm32l4xx.c ****   }
 147              		.loc 1 282 14 view .LVU32
 148 0040 E8E7     		b	.L6
 149              	.LVL4:
 150              	.L12:
 289:Core/Src/system_stm32l4xx.c ****   {
 290:Core/Src/system_stm32l4xx.c ****     case 0x00:  /* MSI used as system clock source */
 291:Core/Src/system_stm32l4xx.c ****       SystemCoreClock = msirange;
 151              		.loc 1 291 7 is_stmt 1 view .LVU33
 152              		.loc 1 291 23 is_stmt 0 view .LVU34
 153 0042 214B     		ldr	r3, .L19+8
 154 0044 1960     		str	r1, [r3]
 292:Core/Src/system_stm32l4xx.c ****       break;
 155              		.loc 1 292 7 is_stmt 1 view .LVU35
 156              	.LVL5:
 157              	.L13:
 293:Core/Src/system_stm32l4xx.c **** 
 294:Core/Src/system_stm32l4xx.c ****     case 0x04:  /* HSI used as system clock source */
 295:Core/Src/system_stm32l4xx.c ****       SystemCoreClock = HSI_VALUE;
 296:Core/Src/system_stm32l4xx.c ****       break;
 297:Core/Src/system_stm32l4xx.c **** 
 298:Core/Src/system_stm32l4xx.c ****     case 0x08:  /* HSE used as system clock source */
ARM GAS  /tmp/ccBypRVb.s 			page 9


 299:Core/Src/system_stm32l4xx.c ****       SystemCoreClock = HSE_VALUE;
 300:Core/Src/system_stm32l4xx.c ****       break;
 301:Core/Src/system_stm32l4xx.c **** 
 302:Core/Src/system_stm32l4xx.c ****     case 0x0C:  /* PLL used as system clock  source */
 303:Core/Src/system_stm32l4xx.c ****       /* PLL_VCO = (HSE_VALUE or HSI_VALUE or MSI_VALUE/ PLLM) * PLLN
 304:Core/Src/system_stm32l4xx.c ****          SYSCLK = PLL_VCO / PLLR
 305:Core/Src/system_stm32l4xx.c ****          */
 306:Core/Src/system_stm32l4xx.c ****       pllsource = (RCC->PLLCFGR & RCC_PLLCFGR_PLLSRC);
 307:Core/Src/system_stm32l4xx.c ****       pllm = ((RCC->PLLCFGR & RCC_PLLCFGR_PLLM) >> 4U) + 1U ;
 308:Core/Src/system_stm32l4xx.c **** 
 309:Core/Src/system_stm32l4xx.c ****       switch (pllsource)
 310:Core/Src/system_stm32l4xx.c ****       {
 311:Core/Src/system_stm32l4xx.c ****         case 0x02:  /* HSI used as PLL clock source */
 312:Core/Src/system_stm32l4xx.c ****           pllvco = (HSI_VALUE / pllm);
 313:Core/Src/system_stm32l4xx.c ****           break;
 314:Core/Src/system_stm32l4xx.c **** 
 315:Core/Src/system_stm32l4xx.c ****         case 0x03:  /* HSE used as PLL clock source */
 316:Core/Src/system_stm32l4xx.c ****           pllvco = (HSE_VALUE / pllm);
 317:Core/Src/system_stm32l4xx.c ****           break;
 318:Core/Src/system_stm32l4xx.c **** 
 319:Core/Src/system_stm32l4xx.c ****         default:    /* MSI used as PLL clock source */
 320:Core/Src/system_stm32l4xx.c ****           pllvco = (msirange / pllm);
 321:Core/Src/system_stm32l4xx.c ****           break;
 322:Core/Src/system_stm32l4xx.c ****       }
 323:Core/Src/system_stm32l4xx.c ****       pllvco = pllvco * ((RCC->PLLCFGR & RCC_PLLCFGR_PLLN) >> 8U);
 324:Core/Src/system_stm32l4xx.c ****       pllr = (((RCC->PLLCFGR & RCC_PLLCFGR_PLLR) >> 25U) + 1U) * 2U;
 325:Core/Src/system_stm32l4xx.c ****       SystemCoreClock = pllvco/pllr;
 326:Core/Src/system_stm32l4xx.c ****       break;
 327:Core/Src/system_stm32l4xx.c **** 
 328:Core/Src/system_stm32l4xx.c ****     default:
 329:Core/Src/system_stm32l4xx.c ****       SystemCoreClock = msirange;
 330:Core/Src/system_stm32l4xx.c ****       break;
 331:Core/Src/system_stm32l4xx.c ****   }
 332:Core/Src/system_stm32l4xx.c ****   /* Compute HCLK clock frequency --------------------------------------------*/
 333:Core/Src/system_stm32l4xx.c ****   /* Get HCLK prescaler */
 334:Core/Src/system_stm32l4xx.c ****   tmp = AHBPrescTable[((RCC->CFGR & RCC_CFGR_HPRE) >> 4U)];
 158              		.loc 1 334 3 view .LVU36
 159              		.loc 1 334 28 is_stmt 0 view .LVU37
 160 0046 1E4B     		ldr	r3, .L19
 161 0048 9B68     		ldr	r3, [r3, #8]
 162              		.loc 1 334 52 view .LVU38
 163 004a C3F30313 		ubfx	r3, r3, #4, #4
 164              		.loc 1 334 22 view .LVU39
 165 004e 1F4A     		ldr	r2, .L19+12
 166 0050 D15C     		ldrb	r1, [r2, r3]	@ zero_extendqisi2
 167              	.LVL6:
 335:Core/Src/system_stm32l4xx.c ****   /* HCLK clock frequency */
 336:Core/Src/system_stm32l4xx.c ****   SystemCoreClock >>= tmp;
 168              		.loc 1 336 3 is_stmt 1 view .LVU40
 169              		.loc 1 336 19 is_stmt 0 view .LVU41
 170 0052 1D4A     		ldr	r2, .L19+8
 171 0054 1368     		ldr	r3, [r2]
 172 0056 CB40     		lsrs	r3, r3, r1
 173 0058 1360     		str	r3, [r2]
 337:Core/Src/system_stm32l4xx.c **** }
 174              		.loc 1 337 1 view .LVU42
 175 005a 7047     		bx	lr
ARM GAS  /tmp/ccBypRVb.s 			page 10


 176              	.LVL7:
 177              	.L11:
 295:Core/Src/system_stm32l4xx.c ****       break;
 178              		.loc 1 295 7 is_stmt 1 view .LVU43
 295:Core/Src/system_stm32l4xx.c ****       break;
 179              		.loc 1 295 23 is_stmt 0 view .LVU44
 180 005c 1A4B     		ldr	r3, .L19+8
 181 005e 1C4A     		ldr	r2, .L19+16
 182 0060 1A60     		str	r2, [r3]
 296:Core/Src/system_stm32l4xx.c **** 
 183              		.loc 1 296 7 is_stmt 1 view .LVU45
 184 0062 F0E7     		b	.L13
 185              	.L10:
 299:Core/Src/system_stm32l4xx.c ****       break;
 186              		.loc 1 299 7 view .LVU46
 299:Core/Src/system_stm32l4xx.c ****       break;
 187              		.loc 1 299 23 is_stmt 0 view .LVU47
 188 0064 184B     		ldr	r3, .L19+8
 189 0066 1B4A     		ldr	r2, .L19+20
 190 0068 1A60     		str	r2, [r3]
 300:Core/Src/system_stm32l4xx.c **** 
 191              		.loc 1 300 7 is_stmt 1 view .LVU48
 192 006a ECE7     		b	.L13
 193              	.L8:
 306:Core/Src/system_stm32l4xx.c ****       pllm = ((RCC->PLLCFGR & RCC_PLLCFGR_PLLM) >> 4U) + 1U ;
 194              		.loc 1 306 7 view .LVU49
 306:Core/Src/system_stm32l4xx.c ****       pllm = ((RCC->PLLCFGR & RCC_PLLCFGR_PLLM) >> 4U) + 1U ;
 195              		.loc 1 306 23 is_stmt 0 view .LVU50
 196 006c 144B     		ldr	r3, .L19
 197 006e DA68     		ldr	r2, [r3, #12]
 306:Core/Src/system_stm32l4xx.c ****       pllm = ((RCC->PLLCFGR & RCC_PLLCFGR_PLLM) >> 4U) + 1U ;
 198              		.loc 1 306 17 view .LVU51
 199 0070 02F00302 		and	r2, r2, #3
 200              	.LVL8:
 307:Core/Src/system_stm32l4xx.c **** 
 201              		.loc 1 307 7 is_stmt 1 view .LVU52
 307:Core/Src/system_stm32l4xx.c **** 
 202              		.loc 1 307 19 is_stmt 0 view .LVU53
 203 0074 DB68     		ldr	r3, [r3, #12]
 307:Core/Src/system_stm32l4xx.c **** 
 204              		.loc 1 307 49 view .LVU54
 205 0076 C3F30213 		ubfx	r3, r3, #4, #3
 307:Core/Src/system_stm32l4xx.c **** 
 206              		.loc 1 307 12 view .LVU55
 207 007a 0133     		adds	r3, r3, #1
 208              	.LVL9:
 309:Core/Src/system_stm32l4xx.c ****       {
 209              		.loc 1 309 7 is_stmt 1 view .LVU56
 210 007c 022A     		cmp	r2, #2
 211 007e 04D0     		beq	.L14
 212 0080 032A     		cmp	r2, #3
 213 0082 15D0     		beq	.L15
 320:Core/Src/system_stm32l4xx.c ****           break;
 214              		.loc 1 320 11 view .LVU57
 320:Core/Src/system_stm32l4xx.c ****           break;
 215              		.loc 1 320 18 is_stmt 0 view .LVU58
 216 0084 B1FBF3F3 		udiv	r3, r1, r3
ARM GAS  /tmp/ccBypRVb.s 			page 11


 217              	.LVL10:
 321:Core/Src/system_stm32l4xx.c ****       }
 218              		.loc 1 321 11 is_stmt 1 view .LVU59
 219 0088 02E0     		b	.L17
 220              	.LVL11:
 221              	.L14:
 312:Core/Src/system_stm32l4xx.c ****           break;
 222              		.loc 1 312 11 view .LVU60
 312:Core/Src/system_stm32l4xx.c ****           break;
 223              		.loc 1 312 18 is_stmt 0 view .LVU61
 224 008a 114A     		ldr	r2, .L19+16
 225              	.LVL12:
 312:Core/Src/system_stm32l4xx.c ****           break;
 226              		.loc 1 312 18 view .LVU62
 227 008c B2FBF3F3 		udiv	r3, r2, r3
 228              	.LVL13:
 313:Core/Src/system_stm32l4xx.c **** 
 229              		.loc 1 313 11 is_stmt 1 view .LVU63
 230              	.L17:
 323:Core/Src/system_stm32l4xx.c ****       pllr = (((RCC->PLLCFGR & RCC_PLLCFGR_PLLR) >> 25U) + 1U) * 2U;
 231              		.loc 1 323 7 view .LVU64
 323:Core/Src/system_stm32l4xx.c ****       pllr = (((RCC->PLLCFGR & RCC_PLLCFGR_PLLR) >> 25U) + 1U) * 2U;
 232              		.loc 1 323 30 is_stmt 0 view .LVU65
 233 0090 0B49     		ldr	r1, .L19
 234              	.LVL14:
 323:Core/Src/system_stm32l4xx.c ****       pllr = (((RCC->PLLCFGR & RCC_PLLCFGR_PLLR) >> 25U) + 1U) * 2U;
 235              		.loc 1 323 30 view .LVU66
 236 0092 CA68     		ldr	r2, [r1, #12]
 323:Core/Src/system_stm32l4xx.c ****       pllr = (((RCC->PLLCFGR & RCC_PLLCFGR_PLLR) >> 25U) + 1U) * 2U;
 237              		.loc 1 323 60 view .LVU67
 238 0094 C2F30622 		ubfx	r2, r2, #8, #7
 323:Core/Src/system_stm32l4xx.c ****       pllr = (((RCC->PLLCFGR & RCC_PLLCFGR_PLLR) >> 25U) + 1U) * 2U;
 239              		.loc 1 323 14 view .LVU68
 240 0098 03FB02F3 		mul	r3, r3, r2
 241              	.LVL15:
 324:Core/Src/system_stm32l4xx.c ****       SystemCoreClock = pllvco/pllr;
 242              		.loc 1 324 7 is_stmt 1 view .LVU69
 324:Core/Src/system_stm32l4xx.c ****       SystemCoreClock = pllvco/pllr;
 243              		.loc 1 324 20 is_stmt 0 view .LVU70
 244 009c CA68     		ldr	r2, [r1, #12]
 324:Core/Src/system_stm32l4xx.c ****       SystemCoreClock = pllvco/pllr;
 245              		.loc 1 324 50 view .LVU71
 246 009e C2F34162 		ubfx	r2, r2, #25, #2
 324:Core/Src/system_stm32l4xx.c ****       SystemCoreClock = pllvco/pllr;
 247              		.loc 1 324 58 view .LVU72
 248 00a2 0132     		adds	r2, r2, #1
 324:Core/Src/system_stm32l4xx.c ****       SystemCoreClock = pllvco/pllr;
 249              		.loc 1 324 12 view .LVU73
 250 00a4 5200     		lsls	r2, r2, #1
 251              	.LVL16:
 325:Core/Src/system_stm32l4xx.c ****       break;
 252              		.loc 1 325 7 is_stmt 1 view .LVU74
 325:Core/Src/system_stm32l4xx.c ****       break;
 253              		.loc 1 325 31 is_stmt 0 view .LVU75
 254 00a6 B3FBF2F3 		udiv	r3, r3, r2
 255              	.LVL17:
 325:Core/Src/system_stm32l4xx.c ****       break;
ARM GAS  /tmp/ccBypRVb.s 			page 12


 256              		.loc 1 325 23 view .LVU76
 257 00aa 074A     		ldr	r2, .L19+8
 258              	.LVL18:
 325:Core/Src/system_stm32l4xx.c ****       break;
 259              		.loc 1 325 23 view .LVU77
 260 00ac 1360     		str	r3, [r2]
 326:Core/Src/system_stm32l4xx.c **** 
 261              		.loc 1 326 7 is_stmt 1 view .LVU78
 262 00ae CAE7     		b	.L13
 263              	.LVL19:
 264              	.L15:
 316:Core/Src/system_stm32l4xx.c ****           break;
 265              		.loc 1 316 11 view .LVU79
 316:Core/Src/system_stm32l4xx.c ****           break;
 266              		.loc 1 316 18 is_stmt 0 view .LVU80
 267 00b0 084A     		ldr	r2, .L19+20
 268              	.LVL20:
 316:Core/Src/system_stm32l4xx.c ****           break;
 269              		.loc 1 316 18 view .LVU81
 270 00b2 B2FBF3F3 		udiv	r3, r2, r3
 271              	.LVL21:
 317:Core/Src/system_stm32l4xx.c **** 
 272              		.loc 1 317 11 is_stmt 1 view .LVU82
 273 00b6 EBE7     		b	.L17
 274              	.LVL22:
 275              	.L7:
 329:Core/Src/system_stm32l4xx.c ****       break;
 276              		.loc 1 329 7 view .LVU83
 329:Core/Src/system_stm32l4xx.c ****       break;
 277              		.loc 1 329 23 is_stmt 0 view .LVU84
 278 00b8 034B     		ldr	r3, .L19+8
 279 00ba 1960     		str	r1, [r3]
 330:Core/Src/system_stm32l4xx.c ****   }
 280              		.loc 1 330 7 is_stmt 1 view .LVU85
 281 00bc C3E7     		b	.L13
 282              	.L20:
 283 00be 00BF     		.align	2
 284              	.L19:
 285 00c0 00100240 		.word	1073876992
 286 00c4 00000000 		.word	.LANCHOR0
 287 00c8 00000000 		.word	.LANCHOR1
 288 00cc 00000000 		.word	.LANCHOR2
 289 00d0 0024F400 		.word	16000000
 290 00d4 00127A00 		.word	8000000
 291              		.cfi_endproc
 292              	.LFE133:
 294              		.global	MSIRangeTable
 295              		.global	APBPrescTable
 296              		.global	AHBPrescTable
 297              		.global	SystemCoreClock
 298              		.section	.data.SystemCoreClock,"aw"
 299              		.align	2
 300              		.set	.LANCHOR1,. + 0
 303              	SystemCoreClock:
 304 0000 00093D00 		.word	4000000
 305              		.section	.rodata.AHBPrescTable,"a"
 306              		.align	2
ARM GAS  /tmp/ccBypRVb.s 			page 13


 307              		.set	.LANCHOR2,. + 0
 310              	AHBPrescTable:
 311 0000 00000000 		.ascii	"\000\000\000\000\000\000\000\000\001\002\003\004\006"
 311      00000000 
 311      01020304 
 311      06
 312 000d 070809   		.ascii	"\007\010\011"
 313              		.section	.rodata.APBPrescTable,"a"
 314              		.align	2
 317              	APBPrescTable:
 318 0000 00000000 		.ascii	"\000\000\000\000\001\002\003\004"
 318      01020304 
 319              		.section	.rodata.MSIRangeTable,"a"
 320              		.align	2
 321              		.set	.LANCHOR0,. + 0
 324              	MSIRangeTable:
 325 0000 A0860100 		.word	100000
 326 0004 400D0300 		.word	200000
 327 0008 801A0600 		.word	400000
 328 000c 00350C00 		.word	800000
 329 0010 40420F00 		.word	1000000
 330 0014 80841E00 		.word	2000000
 331 0018 00093D00 		.word	4000000
 332 001c 00127A00 		.word	8000000
 333 0020 0024F400 		.word	16000000
 334 0024 00366E01 		.word	24000000
 335 0028 0048E801 		.word	32000000
 336 002c 006CDC02 		.word	48000000
 337              		.text
 338              	.Letext0:
 339              		.file 2 "/usr/lib/gcc/arm-none-eabi/9.2.1/include/stdint.h"
 340              		.file 3 "Drivers/CMSIS/Include/core_cm4.h"
 341              		.file 4 "Drivers/CMSIS/Device/ST/STM32L4xx/Include/system_stm32l4xx.h"
 342              		.file 5 "Drivers/CMSIS/Device/ST/STM32L4xx/Include/stm32l432xx.h"
 343              		.file 6 "Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_hal_def.h"
 344              		.file 7 "Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_hal_flash.h"
 345              		.file 8 "Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_hal.h"
ARM GAS  /tmp/ccBypRVb.s 			page 14


DEFINED SYMBOLS
                            *ABS*:0000000000000000 system_stm32l4xx.c
     /tmp/ccBypRVb.s:18     .text.SystemInit:0000000000000000 $t
     /tmp/ccBypRVb.s:26     .text.SystemInit:0000000000000000 SystemInit
     /tmp/ccBypRVb.s:73     .text.SystemInit:000000000000003c $d
     /tmp/ccBypRVb.s:79     .text.SystemCoreClockUpdate:0000000000000000 $t
     /tmp/ccBypRVb.s:86     .text.SystemCoreClockUpdate:0000000000000000 SystemCoreClockUpdate
     /tmp/ccBypRVb.s:124    .text.SystemCoreClockUpdate:000000000000002a $d
     /tmp/ccBypRVb.s:285    .text.SystemCoreClockUpdate:00000000000000c0 $d
     /tmp/ccBypRVb.s:324    .rodata.MSIRangeTable:0000000000000000 MSIRangeTable
     /tmp/ccBypRVb.s:317    .rodata.APBPrescTable:0000000000000000 APBPrescTable
     /tmp/ccBypRVb.s:310    .rodata.AHBPrescTable:0000000000000000 AHBPrescTable
     /tmp/ccBypRVb.s:303    .data.SystemCoreClock:0000000000000000 SystemCoreClock
     /tmp/ccBypRVb.s:299    .data.SystemCoreClock:0000000000000000 $d
     /tmp/ccBypRVb.s:306    .rodata.AHBPrescTable:0000000000000000 $d
     /tmp/ccBypRVb.s:314    .rodata.APBPrescTable:0000000000000000 $d
     /tmp/ccBypRVb.s:320    .rodata.MSIRangeTable:0000000000000000 $d
     /tmp/ccBypRVb.s:138    .text.SystemCoreClockUpdate:0000000000000037 $d
     /tmp/ccBypRVb.s:138    .text.SystemCoreClockUpdate:0000000000000038 $t

NO UNDEFINED SYMBOLS
